[
    {
        "name": "Ant.Alert",
        "comment": " Alert component\n\n**This component has a stateless and a stateful API**\n\n<https://ant.design/components/alert/>\n\nAlerts inform your users of relevant information.\n\n@docs Alert, AlertType\n\n\n## Stateless API\n\nThe following functions allow you to simply plop in an alert that never emits `Msg`s. If you want to control their visibility, you would have to do so on your own.\n\n@docs alert\n@docs withType\n@docs withDescription\n@docs toHtml\n\n\n## Stateful API\n\nIf you want to render interactive alerts, you will have to create a \"stack\" of stateful alerts, which can contain between 0 and `n` `Alert`s. Every alert inside this stack is interactive - the user can close them at will. In other words, the alerts in this stack produce `Msg` values that you must handle.\n\nThere are 3 things you must do in order to properly manage your stateful stack of alerts:\n\n1.  initialize the stack with `initAlertStack` and save this stack in your model.\n2.  Create a `Msg` value that contains a `Alert.Msg`\n3.  Handle `Alert.Msg` values with updateAlertStack\n\nA alert stack is nothing more than just a `List (Alert msg)` (with some internal mutations done to them), so to show them in your view, all you need to do is call `List.map toHtml statefulAlerts`\n\nExample:\n\n    type Msg\n        = AlertMsg Alert.Msg\n\n    model : Model\n    model =\n        { statefulAlertStack =\n            initAlertStack AlertMsg\n                [ alert \"Hey there, you can close me :)\"\n                ]\n        }\n\n    update : Msg -> Model -> ( Model, Cmd Msg )\n    update msg model =\n        case msg of\n            AlertMsg alertMsg ->\n                let\n                    ( alertModel, alertCmd ) =\n                        updateAlertStack AlertMsg alertMsg model.statefulAlertStack\n                in\n                ( { closeableAlerts = alertModel }\n                , alertCmd\n                )\n\n    view : Model -> Html msg\n    view { statefulAlertStack } =\n        div [] <|\n            stackToHtml statefulAlertStack\n\n@docs Msg, CloseableAlertStack\n\n@docs initAlertStack, updateAlertStack, stackToHtml\n\n",
        "unions": [
            {
                "name": "Alert",
                "comment": " An `Alert` is what is returned when you create an alert component\n\nYou can customize alerts.\n\nTo turn an `Alert` into `Html msg` call `toHtml`\n\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "AlertType",
                "comment": " The kind of alert. Determines the colors used for background and border.\n",
                "args": [],
                "cases": [
                    [
                        "Success",
                        []
                    ],
                    [
                        "Info",
                        []
                    ],
                    [
                        "Warning",
                        []
                    ],
                    [
                        "Error",
                        []
                    ]
                ]
            },
            {
                "name": "CloseableAlertStack",
                "comment": " Represents the state of closeable alerts\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "Msg",
                "comment": " Messages emitted by closeable alerts\n",
                "args": [],
                "cases": []
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "alert",
                "comment": " Create an alert.\n\nalert \"Hello, world!\"\n\n",
                "type": "String.String -> Ant.Alert.Alert msg"
            },
            {
                "name": "initAlertStack",
                "comment": " THIS API IS UNSTABLE AND ALSO VISUALLY UNAPPEALING. DO NOT USE STATEFUL ALERTS YET.\n\nTakes a set of stateless alerts that don't ever emit messages and turns them into Alerts that a user can interact with (i.e. close them).\n\nSee the example above to see the usage of `initAlertStack`.\n\nThis alert stack must be saved in your model in order for it's state to be tracked and altered.\n\nEvery time a user clicks on the close icon, the alert will emit a `msg`.\n\n",
                "type": "(Ant.Alert.Msg -> msg) -> List.List (Ant.Alert.Alert msg) -> Ant.Alert.CloseableAlertStack msg"
            },
            {
                "name": "stackToHtml",
                "comment": " Render a stack of closeable alerts into your `view`.\n",
                "type": "Ant.Alert.CloseableAlertStack msg -> Html.Html msg"
            },
            {
                "name": "toHtml",
                "comment": " Convert an `Alert` into a `Html msg`\n\n    alert \"Hellow, world!\"\n        |> toHtml\n\n",
                "type": "Ant.Alert.Alert msg -> Html.Html msg"
            },
            {
                "name": "updateAlertStack",
                "comment": " Update a stack of closeable alerts. This function should be hooked up to your `update` function.\n",
                "type": "(Ant.Alert.Msg -> msg) -> Ant.Alert.Msg -> Ant.Alert.CloseableAlertStack msg -> ( Ant.Alert.CloseableAlertStack msg, Platform.Cmd.Cmd msg )"
            },
            {
                "name": "withDescription",
                "comment": " Provide a descriptive label / header to your alert, which will be rendered in bigger / emphasized text.\n\n    alert \"Very long alert that may require a more succinct label / summary\"\n        |> withDescription \"Invalid Password\"\n        |> toHtml\n\n",
                "type": "String.String -> Ant.Alert.Alert msg -> Ant.Alert.Alert msg"
            },
            {
                "name": "withType",
                "comment": " Change the type of the alert. By default, alerts are Success types.\n\n    alert \"Error! Something went wrong!\"\n        |> withType Error\n        |> toHtml\n\n",
                "type": "Ant.Alert.AlertType -> Ant.Alert.Alert msg -> Ant.Alert.Alert msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Button",
        "comment": " Button component\n\n@docs Button\n\n\n# Customizing the Button\n\n@docs button, onClick, ButtonType, withType, withIcon, ButtonSize, disabled, withHtmlType, HtmlButtonType\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "Button",
                "comment": " Represents a button component\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "ButtonSize",
                "comment": " Determines the size of the button\n",
                "args": [],
                "cases": [
                    [
                        "Large",
                        []
                    ],
                    [
                        "DefaultSize",
                        []
                    ],
                    [
                        "Small",
                        []
                    ]
                ]
            },
            {
                "name": "ButtonType",
                "comment": " The type of the button\n",
                "args": [],
                "cases": [
                    [
                        "Primary",
                        []
                    ],
                    [
                        "Default",
                        []
                    ],
                    [
                        "Dashed",
                        []
                    ],
                    [
                        "Text",
                        []
                    ],
                    [
                        "Link",
                        []
                    ]
                ]
            },
            {
                "name": "HtmlButtonType",
                "comment": " The \"type\" attribute of a HTML button as defined in the button spec:\n\n<https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button>\n\n",
                "args": [],
                "cases": [
                    [
                        "Button_",
                        []
                    ],
                    [
                        "Reset",
                        []
                    ],
                    [
                        "Submit",
                        []
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "button",
                "comment": " Create a Button component.\n\n    button \"Click Me!\"\n        |> toHtml\n\n",
                "type": "String.String -> Ant.Button.Button msg"
            },
            {
                "name": "disabled",
                "comment": " Make the button disabled. If you have a `onClick` event registered, it will not be fired.\n\n    button \"You can't click this\"\n        |> onClick Logout\n        |> disabled True\n        |> toHtml\n\n",
                "type": "Basics.Bool -> Ant.Button.Button msg -> Ant.Button.Button msg"
            },
            {
                "name": "onClick",
                "comment": " Make your button emit messages. By default, clicking a button does nothing.\n\n    button \"submit\"\n        |> onClick FinalCheckoutFormSubmitted\n        |> toHtml\n\n",
                "type": "msg -> Ant.Button.Button msg -> Ant.Button.Button msg"
            },
            {
                "name": "toHtml",
                "comment": " Turn your Button into Html msg\n",
                "type": "Ant.Button.Button msg -> Html.Html msg"
            },
            {
                "name": "withHtmlType",
                "comment": " Specify the \"type\" attribute of the button.\n",
                "type": "Ant.Button.HtmlButtonType -> Ant.Button.Button msg -> Ant.Button.Button msg"
            },
            {
                "name": "withIcon",
                "comment": " Add an icon to the button\n\n    button \"Search\"\n        |> withIcon searchOutlined\n        |> toHtml\n\n",
                "type": "Ant.Icons.Icon msg -> Ant.Button.Button msg -> Ant.Button.Button msg"
            },
            {
                "name": "withType",
                "comment": " Change the default type of the Button\n\n    button \"submit\"\n        |> withType Dashed\n        |> toHtml\n\n",
                "type": "Ant.Button.ButtonType -> Ant.Button.Button msg -> Ant.Button.Button msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Checkbox",
        "comment": " Themable checkbox component\n\n\n## Types\n\n@docs Checkbox\n\nNote that by default a checkbox does not emit a message. You need to call `withOnCheck` for your checkbox to emit a message.\n\n\n## Creating a Checkbox\n\n@docs checkbox\n\n\n## Customizing a Checkbox\n\n@docs withOnCheck, withDisabled, withLabel\n\n\n## Rendering the Checkbox\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "Checkbox",
                "comment": " Represents a customizeable and themable checkbox\n",
                "args": [
                    "msg"
                ],
                "cases": []
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "checkbox",
                "comment": " Create a checkbox\n\n    checkbox model.checked\n\n",
                "type": "Ant.Checkbox.Checkbox msg"
            },
            {
                "name": "toHtml",
                "comment": " Render your checkbox.\n\n    checkbox model.checked\n        |> withOnCheck RememberMeCheckboxToggled\n        |> withLabel \"remember me\"\n        |> toHtml\n\n",
                "type": "Basics.Bool -> Ant.Checkbox.Checkbox msg -> Html.Html msg"
            },
            {
                "name": "withDisabled",
                "comment": " Disable the checkbox. This prevents emitting messages.\n\n    checkbox model.checked\n        |> withDisabled model.disabled\n\n",
                "type": "Basics.Bool -> Ant.Checkbox.Checkbox msg -> Ant.Checkbox.Checkbox msg"
            },
            {
                "name": "withLabel",
                "comment": " Add a clickable label to your checkbox.\n\n    checkbox model.checked\n        |> withLabel \"remember me\"\n\n",
                "type": "String.String -> Ant.Checkbox.Checkbox msg -> Ant.Checkbox.Checkbox msg"
            },
            {
                "name": "withOnCheck",
                "comment": " Emit messages from your checkbox.\n\n    checkbox model.checked\n        |> withOnCheck RememberMeCheckboxToggled\n\n",
                "type": "(Basics.Bool -> msg) -> Ant.Checkbox.Checkbox msg -> Ant.Checkbox.Checkbox msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Css",
        "comment": " Global styles that are responsible for the visualas / aesthetic of the elm-antd components. You **must** call `defaultStyles` or `createThemedStyles` at the root of your Elm project.\n\n@docs createThemedStyles, defaultStyles\n\n",
        "unions": [],
        "aliases": [],
        "values": [
            {
                "name": "createThemedStyles",
                "comment": " Creates a global stylesheet based on a custom Theme. See Ant.Theme documentation for more info on `Theme` and creating themes.\n\nYou must call `createThemedStyles` at the root of your Elm project!\n\n    div []\n        [ Ant.Css.createThemedStyles theme\n\n        -- This button will now be themed according to the primaryColor color you chose!\n        , Btn.toHtml <| button \"Hello, elm-antd!\"\n        ]\n\n",
                "type": "Ant.Theme.Theme -> Html.Html msg"
            },
            {
                "name": "defaultStyles",
                "comment": " The default stylesheet that adheres to the Antd specification.\n\nYou must call `defaultStyles` at the root of your Elm project!\n\n    div []\n        [ Ant.Css.defaultTheme\n\n        -- This button will now be themed according to the primaryColor color you chose!\n        , Btn.toHtml <| button \"Hello, elm-antd!\"\n        ]\n\n",
                "type": "Html.Html msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Divider",
        "comment": " Divider component\n\n\n# Divider\n\nA divider represents a visual line that separates content either horizontally or vertically.\n\n[Demo](https://elm-antd.netlify.app/components/divider)\n\n@docs Divider\n\n\n# Customizing the Divider\n\n@docs divider, Line, withLine, withType, Orientation, withOrientation, Type, TextStyle, withTextStyle, withLabel\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "Divider",
                "comment": " A customizeable divider that is used to separate pieces of content.\n",
                "args": [],
                "cases": []
            },
            {
                "name": "Line",
                "comment": " The visual look of the divider\n",
                "args": [],
                "cases": [
                    [
                        "Dashed",
                        []
                    ],
                    [
                        "Solid",
                        []
                    ]
                ]
            },
            {
                "name": "Orientation",
                "comment": " Orientation defines the positioning of the divider label.\n",
                "args": [],
                "cases": [
                    [
                        "Left",
                        []
                    ],
                    [
                        "Right",
                        []
                    ],
                    [
                        "Center",
                        []
                    ]
                ]
            },
            {
                "name": "TextStyle",
                "comment": " Defines the size and emphasis of the divider label.\n",
                "args": [],
                "cases": [
                    [
                        "Plain",
                        []
                    ],
                    [
                        "Heading",
                        []
                    ]
                ]
            },
            {
                "name": "Type",
                "comment": " Whether the divider is separating content vertically or horizontally.\n",
                "args": [],
                "cases": [
                    [
                        "Horizontal",
                        []
                    ],
                    [
                        "Vertical",
                        []
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "divider",
                "comment": " Create a Divider component.\n\n    Divider.divider\n        |> Divider.toHtml\n\n",
                "type": "Ant.Divider.Divider"
            },
            {
                "name": "toHtml",
                "comment": " Convert a Divider into Html\n",
                "type": "Ant.Divider.Divider -> Html.Html msg"
            },
            {
                "name": "withLabel",
                "comment": " The label of the divider.\n",
                "type": "String.String -> Ant.Divider.Divider -> Ant.Divider.Divider"
            },
            {
                "name": "withLine",
                "comment": " Defines the line type of the divider.\n",
                "type": "Ant.Divider.Line -> Ant.Divider.Divider -> Ant.Divider.Divider"
            },
            {
                "name": "withOrientation",
                "comment": " Defines the positioning of the label. If your divider doesn't have a label, then this option is redundant.\n",
                "type": "Ant.Divider.Orientation -> Ant.Divider.Divider -> Ant.Divider.Divider"
            },
            {
                "name": "withTextStyle",
                "comment": " Defines whether the divider titles will get rendered as Headings or as smaller text.\n",
                "type": "Ant.Divider.TextStyle -> Ant.Divider.Divider -> Ant.Divider.Divider"
            },
            {
                "name": "withType",
                "comment": " Change the type of the divider. By default the type is `Horizontal`\n\n    verticalDivider =\n        Divider.divider\n            |> withType Vertical\n            |> toHtml\n\n",
                "type": "Ant.Divider.Type -> Ant.Divider.Divider -> Ant.Divider.Divider"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Form",
        "comment": " Build [composable forms](#Form) comprised of [fields](#fields).\n\nThis is a port of [hecrj/composable-form](https://package.elm-lang.org/packages/hecrj/composable-form/latest). LICENSE located at ./src/Ant/Form/LICENSE.\n\n\n# Definition\n\n@docs Form\n\n\n# Fields\n\n@docs inputField, passwordField, checkboxField, textareaField\n\n> FYI: I have hidden a bunch of fields because they have not been integrated to render elm-antd inputs yet. But PRs are always welcome!\n\n@docs withAdjacentHtml\n\n\n# Composition\n\nAll the functions in [the previous section](#fields) produce a `Form` with a **single**\nfield. You might then be wondering: \"How do I create a `Form` with multiple fields?!\"\nWell, as the name of this package says: `Form` is composable! This section explains how you\ncan combine different forms into bigger and more complex ones.\n\n@docs succeed, append, optional, disable, group, section, andThen, meta, list\n\n\n# Mapping\n\n@docs map, mapValues\n\n\n# Output\n\nThis section describes how to fill a `Form` with its `values` and obtain its\ndifferent fields and its `output`. This is mostly used to write custom view code.\n\nIf you just want to render a simple form as `Html`, check [`Form.View`](Form-View) first as it\n\n@docs Field, TextType, FilledField, fill\n\n",
        "unions": [
            {
                "name": "Field",
                "comment": " Represents a form field.\n\nIf you are writing custom view code you will probably need to pattern match this type,\nusing the result of [`fill`](#fill).\n\n",
                "args": [
                    "values"
                ],
                "cases": [
                    [
                        "Text",
                        [
                            "Ant.Form.TextType",
                            "Ant.Form.InputField.InputField values"
                        ]
                    ],
                    [
                        "Password",
                        [
                            "Ant.Form.PasswordField.PasswordField values"
                        ]
                    ],
                    [
                        "Number",
                        [
                            "Ant.Form.Base.NumberField.NumberField Basics.Float values"
                        ]
                    ],
                    [
                        "Range",
                        [
                            "Ant.Form.Base.RangeField.RangeField Basics.Float values"
                        ]
                    ],
                    [
                        "Checkbox",
                        [
                            "Ant.Form.CheckboxField.CheckboxField values"
                        ]
                    ],
                    [
                        "Radio",
                        [
                            "Ant.Form.Base.RadioField.RadioField values"
                        ]
                    ],
                    [
                        "Select",
                        [
                            "Ant.Form.Base.SelectField.SelectField values"
                        ]
                    ],
                    [
                        "Group",
                        [
                            "List.List (Ant.Form.FilledField values)"
                        ]
                    ],
                    [
                        "Section",
                        [
                            "String.String",
                            "List.List (Ant.Form.FilledField values)"
                        ]
                    ],
                    [
                        "List",
                        [
                            "Ant.Form.Base.FormList.FormList values (Ant.Form.Field values)"
                        ]
                    ]
                ]
            },
            {
                "name": "TextType",
                "comment": " Represents a type of text field\n",
                "args": [],
                "cases": [
                    [
                        "TextRaw",
                        []
                    ],
                    [
                        "TextArea",
                        [
                            "{ rows : Basics.Int }"
                        ]
                    ]
                ]
            }
        ],
        "aliases": [
            {
                "name": "FilledField",
                "comment": " Represents a filled field.\n",
                "args": [
                    "values"
                ],
                "type": "Ant.Form.Base.FilledField (Ant.Form.Field values)"
            },
            {
                "name": "Form",
                "comment": " A `Form` collects and validates user input using fields. When a form is filled with `values`,\nit produces some `output` if validation succeeds.\n\nFor example, a `Form String EmailAddress` is a form that is filled with a `String` and produces\nan `EmailAddress` when valid. This form could very well be an [`emailField`](#emailField)!\n\nA `Form` is only the **definition** of your form logic! It only represents the shape of a form! It lives on its own, decoupled from its values, the rendering strategy and view state.\n\nIf you like to learn by example, you can check out [this excellent introduction to the package by Alex Korban][korban].\n\n[korban]: https://korban.net/posts/elm/2018-11-27-build-complex-forms-validation-elm/\n\n",
                "args": [
                    "values",
                    "output"
                ],
                "type": "Ant.Form.Base.Form values output (Ant.Form.Field values)"
            }
        ],
        "values": [
            {
                "name": "andThen",
                "comment": " Fill a form `andThen` fill another one.\n\nThis is useful to build dynamic forms. For instance, you could use the output of a `selectField`\nto choose between different forms, like this:\n\n    type Msg\n        = CreatePost Post.Body\n        | CreateQuestion Question.Title Question.Body\n\n    type ContentType\n        = Post\n        | Question\n\n    type alias Values =\n        { type_ : String\n        , title : String\n        , body : String\n        }\n\n    contentForm : Form Values Msg\n    contentForm =\n        Form.selectField\n            { parser =\n                \\value ->\n                    case value of\n                        \"post\" ->\n                            Ok Post\n\n                        \"question\" ->\n                            Ok Question\n\n                        _ ->\n                            Err \"invalid content type\"\n            , value = .type_\n            , update = \\newValue values -> { values | type_ = newValue }\n            , attributes =\n                { label = \"Which type of content do you want to create?\"\n                , placeholder = \"Choose a type of content\"\n                , options = [ ( \"post\", \"Post\" ), ( \"question\", \"Question\" ) ]\n                }\n            }\n            |> Form.andThen\n                (\\contentType ->\n                    case contentType of\n                        Post ->\n                            let\n                                bodyField =\n                                    Form.textareaField\n                                        { -- ...\n                                        }\n                            in\n                            Form.succeed CreatePost\n                                |> Form.append bodyField\n\n                        Question ->\n                            let\n                                titleField =\n                                    Form.inputField\n                                        { -- ...\n                                        }\n\n                                bodyField =\n                                    Form.textareaField\n                                        { -- ...\n                                        }\n                            in\n                            Form.succeed CreateQuestion\n                                |> Form.append titleField\n                                |> Form.append bodyField\n                )\n\n",
                "type": "(a -> Ant.Form.Form values b) -> Ant.Form.Form values a -> Ant.Form.Form values b"
            },
            {
                "name": "append",
                "comment": " Append a form to another one while **capturing** the `output` of the first one.\n\nFor instance, we could build a signup form:\n\n    signupEmailField : Form { r | email : String } EmailAddress\n    signupEmailField =\n        Form.emailField\n            { -- ...\n            }\n\n    signupPasswordField : Form { r | password : String } Password\n    signupPasswordField =\n        Form.passwordField\n            { -- ...\n            }\n\n    signupForm :\n        Form\n            { email : String\n            , password : String\n            }\n            ( EmailAddress, Password )\n    signupForm =\n        Form.succeed Tuple.pair\n            |> Form.append signupEmailField\n            |> Form.append signupPasswordField\n\nIn this pipeline, `append` is being used to feed the `Tuple.pair` function and combine two forms\ninto a bigger form that outputs `( EmailAddress, Password )` when submitted.\n\n**Note:** You can use [`succeed`](#succeed) smartly to **skip** some values.\nThis is useful when you want to append some fields in your form to perform validation, but\nyou do not care about the `output` they produce. An example of this is a \"repeat password\" field:\n\n    passwordForm :\n        Form\n            { password : String\n            , repeatPassword : String\n            }\n            Password\n    passwordForm =\n        Form.succeed (\\password repeatedPassword -> password)\n            |> Form.append passwordField\n            |> Form.append repeatPasswordField\n\n",
                "type": "Ant.Form.Form values a -> Ant.Form.Form values (a -> b) -> Ant.Form.Form values b"
            },
            {
                "name": "checkboxField",
                "comment": " Create a form that contains a single checkbox field.\n\nIt has a very similar configuration to [`inputField`](#inputField), the only differences are:\n\n  - Its value is a `Bool` instead of `String`.\n  - Its attributes are [`CheckboxField.Attributes`](Form-Base-CheckboxField#Attributes)\n    instead of [`InputField.Attributes`](Form-Base-InputField#Attributes).\n\n",
                "type": "{ parser : Basics.Bool -> Result.Result String.String output, value : values -> Basics.Bool, update : Basics.Bool -> values -> values, error : values -> Maybe.Maybe String.String, attributes : Ant.Form.CheckboxField.Attributes } -> Ant.Form.Form values output"
            },
            {
                "name": "disable",
                "comment": " Disable a form.\n\nYou can combine this with [`meta`](#meta) to disable parts of a form based on its\nown values.\n\n",
                "type": "Ant.Form.Form values output -> Ant.Form.Form values output"
            },
            {
                "name": "fill",
                "comment": " Fill a form with some `values`.\n\nIt returns:\n\n  - a list of the fields of the form, alongside their errors\n  - the result of the filled form, which can either be:\n      - a non-empty list of validation errors\n      - the correct `output`\n  - whether the form is empty or not\n\n",
                "type": "Ant.Form.Form values output -> values -> { fields : List.List (Ant.Form.FilledField values), result : Result.Result ( Ant.Form.Error.Error, List.List Ant.Form.Error.Error ) output, isEmpty : Basics.Bool }"
            },
            {
                "name": "group",
                "comment": " Render a group of fields horizontally.\n\nUsing this function does not affect the behavior of the form in any way. It is simply to change the layout of a set of fields.\n\n",
                "type": "Ant.Form.Form values output -> Ant.Form.Form values output"
            },
            {
                "name": "inputField",
                "comment": " Create a form that contains a single text field.\n\nIt requires some configuration:\n\n  - `parser` specifies how to validate the field. It needs a function that processes the value of\n    the field and produces a `Result` of either:\n      - a `String` describing an error\n      - a correct `output`\n  - `value` describes how to obtain the field value from the form `values`\n  - `update` describes how the current form `values` should be updated with a new field value\n  - `attributes` let you define the specific attributes of the field (`label` and `placeholder`\n    in this case, see [`InputField.Attributes`](Form-Base-InputField#Attributes))\n\nIt might seem like a lot of configuration, but don't be scared! In practice, it isn't!\nFor instance, you could use this function to build a `nameField` that only succeeds when the\ninputted name has at least 2 characters, like this:\n\n    nameField : Form { r | name : String } String\n    nameField =\n        Form.inputField\n            { parser =\n                \\name ->\n                    if String.length name < 2 then\n                        Err \"the name must have at least 2 characters\"\n\n                    else\n                        Ok name\n            , value = .name\n            , update =\n                \\newValue values ->\n                    { values | name = newValue }\n            , attributes =\n                { label = \"Name\"\n                , placeholder = \"Type your name...\"\n                }\n            }\n\nAs you can see:\n\n  - a `parser` is just a simple validation function\n  - you can define `value` using [record accessors](http://elm-lang.org/docs/records#access)\n  - the `update` function updates the `values` of the form with the `newValue`\n  - `attributes` are most of the time a simple record\n\n",
                "type": "{ parser : String.String -> Result.Result String.String output, value : values -> String.String, update : String.String -> values -> values, error : values -> Maybe.Maybe String.String, attributes : Ant.Form.InputField.Attributes } -> Ant.Form.Form values output"
            },
            {
                "name": "list",
                "comment": " Build a variable list of forms.\n\nFor instance, you can build a form that asks for a variable number of websites:\n\n    type alias WebsiteValues =\n        { name : String\n        , address : String\n        }\n\n    websiteForm : Int -> Form WebsiteValues Website\n\n    websitesForm : Form { r | websites : List WebsiteValues } (List Website)\n    websitesForm =\n        Form.list\n            { default =\n                { name = \"\"\n                , address = \"https://\"\n                }\n            , value = .websites\n            , update = \\value values -> { values | websites = value }\n            , attributes =\n                { label = \"Websites\"\n                , add = Just \"Add website\"\n                , delete = Just \"\"\n                }\n            }\n            websiteForm\n\n",
                "type": "Ant.Form.Base.FormList.Config values elementValues -> (Basics.Int -> Ant.Form.Form elementValues output) -> Ant.Form.Form values (List.List output)"
            },
            {
                "name": "map",
                "comment": " Transform the `output` of a form.\n\nThis function can help you to keep forms decoupled from specific view messages:\n\n    Form.map SignUp signupForm\n\n",
                "type": "(a -> b) -> Ant.Form.Form values a -> Ant.Form.Form values b"
            },
            {
                "name": "mapValues",
                "comment": " Transform the `values` of a form.\n\nThis can be useful when you need to nest forms:\n\n    type alias SignupValues =\n        { email : String\n        , password : String\n        , address : AddressValues\n        }\n\n    addressForm : Form AddressValues Address\n\n    signupForm : Form SignupValues Msg\n    signupForm =\n        Form.succeed SignUp\n            |> Form.append emailField\n            |> Form.append passwordField\n            |> Form.append\n                (Form.mapValues\n                    { value = .address\n                    , update = \\newAddress values -> { values | address = newAddress }\n                    }\n                    addressForm\n                )\n\n",
                "type": "{ value : a -> b, update : b -> a -> a } -> Ant.Form.Form b output -> Ant.Form.Form a output"
            },
            {
                "name": "meta",
                "comment": " Build a form that depends on its own `values`.\n\nThis is useful when you need some fields to perform validation based on\nthe values of other fields. An example of this is a \"repeat password\" field:\n\n    repeatPasswordField :\n        Form\n            { r\n                | password : String\n                , repeatPassword : String\n            }\n            ()\n    repeatPasswordField =\n        Form.meta\n            (\\values ->\n                Form.passwordField\n                    { parser =\n                        \\value ->\n                            if value == values.password then\n                                Ok ()\n\n                            else\n                                Err \"the passwords do not match\"\n                    , value = .repeatPassword\n                    , update =\n                        \\newValue values ->\n                            { values | repeatPassword = newValue }\n                    , attributes =\n                        { label = \"Repeat password\"\n                        , placeholder = \"Type your password again...\"\n                        }\n                    }\n            )\n\n",
                "type": "(values -> Ant.Form.Form values output) -> Ant.Form.Form values output"
            },
            {
                "name": "optional",
                "comment": " Make a form optional. An optional form succeeds when:\n\n  - All of its fields are **empty**, producing `Nothing`\n  - All of its fields are **correct**, producing `Just` the `output`\n\nLet's say we want to optionally ask for a website name and address:\n\n    websiteForm =\n        Form.optional\n            (Form.succeed Website\n                |> Form.append websiteNameField\n                |> Form.append websiteAddressField\n            )\n\nThis `websiteForm` will only be valid if **both** fields are blank, or **both** fields\nare filled correctly.\n\n",
                "type": "Ant.Form.Form values output -> Ant.Form.Form values (Maybe.Maybe output)"
            },
            {
                "name": "passwordField",
                "comment": " Create a form that contains a single password field.\n\nIt has the same configuration options as [`inputField`](#inputField).\n\n",
                "type": "{ parser : Ant.Form.PasswordField.PasswordFieldValue -> Result.Result String.String output, value : values -> Ant.Form.PasswordField.PasswordFieldValue, update : Ant.Form.PasswordField.PasswordFieldValue -> values -> values, error : values -> Maybe.Maybe String.String, attributes : Ant.Form.PasswordField.Attributes } -> Ant.Form.Form values output"
            },
            {
                "name": "section",
                "comment": " Wraps a form in a section: an area with a title.\n\nLike [`group`](#group), this function has no effect on form behavior. It just\nindicates to the form view function that the fields are part of some user-defined\nsection.\n\n",
                "type": "String.String -> Ant.Form.Form values output -> Ant.Form.Form values output"
            },
            {
                "name": "succeed",
                "comment": " Create an **empty** form that always succeeds when filled, returning the given `output`.\n\nIt might seem pointless on its own, but it becomes useful when used in combination with other\nfunctions. The docs for [`append`](#append) have some great examples.\n\n",
                "type": "output -> Ant.Form.Form values output"
            },
            {
                "name": "textareaField",
                "comment": " Create a form that contains a single textarea field.\n\nIt has the same configuration options as [`inputField`](#inputField), except the first argument specifies the vertical height of the text area as per the [`textarea` spec](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea)\n\n",
                "type": "{ rows : Basics.Int } -> { parser : String.String -> Result.Result String.String output, value : values -> String.String, update : String.String -> values -> values, error : values -> Maybe.Maybe String.String, attributes : Ant.Form.InputField.Attributes } -> Ant.Form.Form values output"
            },
            {
                "name": "withAdjacentHtml",
                "comment": " Add arbitrary Html to a field.\n\n**Use this only on individual fields**, not on an entire composed form. See example below of correct usage:\n\n        rememberMeCheckbox =\n            Form.checkboxField\n                { parser = Ok\n                , value = .rememberMe\n                , update = \\value values -> { values | rememberMe = value }\n                , error = always Nothing\n                , attributes =\n                    { label = \"Remember me\" }\n                }\n                |> Form.withAdjacentHtml (Html.a [ A.style \"cursor\" \"pointer\" ] [ Html.text \"forgot password?\" ])\n\n",
                "type": "Html.Html Basics.Never -> Ant.Form.Form values output -> Ant.Form.Form values output"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Form.CheckboxField",
        "comment": " This module contains a reusable `CheckboxField` type.\n\n\n# Definition\n\n@docs CheckboxField, Attributes\n\n",
        "unions": [],
        "aliases": [
            {
                "name": "Attributes",
                "comment": " The attributes of a CheckboxField.\n\nYou need to provide these to:\n\n  - [`Form.checkboxField`][checkboxField]\n\n[checkboxField]: Form#checkboxField\n\n",
                "args": [],
                "type": "{ label : String.String }"
            },
            {
                "name": "CheckboxField",
                "comment": " Represents a checkbox field.\n\n**Note:** You should not need to care about this unless you are creating your own\ncustom fields or writing custom view code.\n\n",
                "args": [
                    "values"
                ],
                "type": "Ant.Form.Field.Field Ant.Form.CheckboxField.Attributes Basics.Bool values"
            }
        ],
        "values": [],
        "binops": []
    },
    {
        "name": "Ant.Form.InputField",
        "comment": " This module contains a reusable `InputField` type.\n\n\n# Definition\n\n@docs InputField, Attributes\n\n",
        "unions": [],
        "aliases": [
            {
                "name": "Attributes",
                "comment": " The attributes of a InputField.\n\nYou need to provide these to:\n\n  - [`Form.textField`][textField]\n  - [`Form.emailField`][emailField]\n  - [`Form.textareaField`][textareaField]\n\n[textField]: Form#textField\n[emailField]: Form#emailField\n[textareaField]: Form#textareaField\n\n",
                "args": [],
                "type": "{ label : String.String, placeholder : String.String }"
            },
            {
                "name": "InputField",
                "comment": " Represents a text field.\n\n**Note:** You should not need to care about this unless you are creating your own\ncustom fields or writing custom view code.\n\n",
                "args": [
                    "values"
                ],
                "type": "Ant.Form.Field.Field Ant.Form.InputField.Attributes String.String values"
            }
        ],
        "values": [],
        "binops": []
    },
    {
        "name": "Ant.Form.PasswordField",
        "comment": " This module contains a reusable `TextField` type.\n\n\n# Definition\n\n@docs PasswordField, PasswordFieldValue, Attributes\n\n",
        "unions": [],
        "aliases": [
            {
                "name": "Attributes",
                "comment": " The attributes of a TextField.\n\nYou need to provide these to:\n\n  - [`Form.textField`][textField]\n  - [`Form.emailField`][emailField]\n  - [`Form.passwordField`][passwordField]\n  - [`Form.textareaField`][textareaField]\n\n[textField]: Form#textField\n[emailField]: Form#emailField\n[passwordField]: Form#passwordField\n[textareaField]: Form#textareaField\n\n",
                "args": [],
                "type": "{ label : String.String, placeholder : String.String }"
            },
            {
                "name": "PasswordField",
                "comment": " Represents a password input field.\n\n**Note:** You should not need to care about this unless you are creating your own\ncustom fields or writing custom view code.\n\n",
                "args": [
                    "values"
                ],
                "type": "Ant.Form.Field.Field Ant.Form.PasswordField.Attributes Ant.Form.PasswordField.PasswordFieldValue values"
            },
            {
                "name": "PasswordFieldValue",
                "comment": " Represents the entire state of the stateful password input field.\n",
                "args": [],
                "type": "{ value : String.String, textVisible : Basics.Bool }"
            }
        ],
        "values": [],
        "binops": []
    },
    {
        "name": "Ant.Form.View",
        "comment": " This module provides helpers to render a [`Form`](Form#Form).\n\n\n# Model\n\n@docs Model, State, idle\n\n\n# Configuration\n\n@docs ViewConfig, Validation\n\n\n# Rendering the form\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "State",
                "comment": " Represents the state of the form.\n\nYou can change it at will from your `update` function. For example, you can set the state to\n`Loading` if submitting the form fires a remote action, or you can set it to `Error` when\nsuch action fails.\n\n    update : Msg -> Model -> ( Model, Cmd Msg )\n    update msg model =\n        case msg of\n            FormChanged newModel ->\n                ( { newModel | state = FormView.Idle }, Cmd.none )\n\n            SignUp email password ->\n                ( { model | state = FormView.Loading }\n                , User.signUp email password\n                    |> Task.attempt SignupTried\n                )\n\n            SignupTried (Ok user) ->\n                ( { model | state = FormView.Success \"You are now registered successfully :)\" }, Route.navigate (Route.Profile user.slug) )\n\n            SignupTried (Err error) ->\n                ( { model | state = FormView.Error error }, Cmd.none )\n\n",
                "args": [],
                "cases": [
                    [
                        "Idle",
                        []
                    ],
                    [
                        "Loading",
                        []
                    ],
                    [
                        "Error",
                        [
                            "String.String"
                        ]
                    ],
                    [
                        "Success",
                        []
                    ]
                ]
            },
            {
                "name": "Validation",
                "comment": " The validation strategy.\n\n  - `ValidateOnSubmit` will show field errors only when the user tries to submit an invalid form.\n  - `ValidateOnBlur` will show field errors as fields are blurred. It uses field labels to identify fields on the form. This validation strategy will not work as expected if your form has multiple fields with the same label.\n\n",
                "args": [],
                "cases": [
                    [
                        "ValidateOnSubmit",
                        []
                    ],
                    [
                        "ValidateOnBlur",
                        []
                    ]
                ]
            }
        ],
        "aliases": [
            {
                "name": "Model",
                "comment": " This type gathers the values of the form, with some exposed state and internal view state that\ntracks which fields should show validation errors.\n",
                "args": [
                    "values"
                ],
                "type": "{ values : values, state : Ant.Form.View.State, errorTracking : Ant.Form.View.ErrorTracking }"
            },
            {
                "name": "ViewConfig",
                "comment": " This allows you to configure the view output.\n\n  - `onChange` specifies the message that should be produced when the `Model` changes.\n  - `action` is the text of the submit button when the form is not loading.\n  - `loading` is the text of the submit button when the form is loading.\n  - `validation` lets you choose the validation strategy.\n\n",
                "args": [
                    "values",
                    "msg"
                ],
                "type": "{ onChange : Ant.Form.View.Model values -> msg, action : String.String, loading : String.String, validation : Ant.Form.View.Validation }"
            }
        ],
        "values": [
            {
                "name": "idle",
                "comment": " Create a `Model` representing an idle form.\n\nYou just need to provide the initial `values` of the form.\n\n",
                "type": "values -> Ant.Form.View.Model values"
            },
            {
                "name": "toHtml",
                "comment": " Render a form as HTML!\n\n    FormView.toHtml\n        { onChange = FormChanged\n        , action = \"Log in\"\n        , loading = \"Logging in...\"\n        , validation = FormView.ValidateOnSubmit\n        }\n        loginForm\n        model\n\n",
                "type": "Ant.Form.View.ViewConfig values msg -> Ant.Form.Form values msg -> Ant.Form.View.Model values -> Html.Html msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Icons",
        "comment": " Icons that you can use in your Elm projects!\n\n@docs Icon\n\n@docs IconSize\n\n@docs toHtml\n\n@docs withDimensions, withSize, withStyles\n\n\n### Available Icons\n\n@docs accountBookFilled\n@docs accountBookOutlined\n@docs accountBookTwoTone\n@docs alertFilled\n@docs alertOutlined\n@docs alertTwoTone\n@docs alibabaOutlined\n@docs alignCenterOutlined\n@docs alignLeftOutlined\n@docs alignRightOutlined\n@docs alipayCircleFilled\n@docs alipayCircleOutlined\n@docs alipayOutlined\n@docs alipaySquareFilled\n@docs aliwangwangFilled\n@docs aliwangwangOutlined\n@docs aliyunOutlined\n@docs amazonCircleFilled\n@docs amazonOutlined\n@docs amazonSquareFilled\n@docs androidFilled\n@docs androidOutlined\n@docs antCloudOutlined\n@docs antDesignOutlined\n@docs apartmentOutlined\n@docs apiFilled\n@docs apiOutlined\n@docs apiTwoTone\n@docs appleFilled\n@docs appleOutlined\n@docs appstoreFilled\n@docs appstoreOutlined\n@docs appstoreTwoTone\n@docs areaChartOutlined\n@docs arrowDownOutlined\n@docs arrowLeftOutlined\n@docs arrowRightOutlined\n@docs arrowUpOutlined\n@docs arrowsAltOutlined\n@docs audioFilled\n@docs audioOutlined\n@docs audioTwoTone\n@docs auditOutlined\n@docs backwardFilled\n@docs backwardOutlined\n@docs bankFilled\n@docs bankOutlined\n@docs bankTwoTone\n@docs barChartOutlined\n@docs barcodeOutlined\n@docs barsOutlined\n@docs behanceCircleFilled\n@docs behanceOutlined\n@docs behanceSquareFilled\n@docs behanceSquareOutlined\n@docs bellFilled\n@docs bellOutlined\n@docs bellTwoTone\n@docs bgColorsOutlined\n@docs blockOutlined\n@docs boldOutlined\n@docs bookFilled\n@docs bookOutlined\n@docs bookTwoTone\n@docs borderBottomOutlined\n@docs borderHorizontalOutlined\n@docs borderInnerOutlined\n@docs borderLeftOutlined\n@docs borderOuterOutlined\n@docs borderOutlined\n@docs borderRightOutlined\n@docs borderTopOutlined\n@docs borderVerticleOutlined\n@docs boxPlotFilled\n@docs boxPlotOutlined\n@docs boxPlotTwoTone\n@docs branchesOutlined\n@docs bugFilled\n@docs bugOutlined\n@docs bugTwoTone\n@docs buildFilled\n@docs buildOutlined\n@docs buildTwoTone\n@docs bulbFilled\n@docs bulbOutlined\n@docs bulbTwoTone\n@docs calculatorFilled\n@docs calculatorOutlined\n@docs calculatorTwoTone\n@docs calendarFilled\n@docs calendarOutlined\n@docs calendarTwoTone\n@docs cameraFilled\n@docs cameraOutlined\n@docs cameraTwoTone\n@docs carFilled\n@docs carOutlined\n@docs carTwoTone\n@docs caretDownFilled\n@docs caretDownOutlined\n@docs caretLeftFilled\n@docs caretLeftOutlined\n@docs caretRightFilled\n@docs caretRightOutlined\n@docs caretUpFilled\n@docs caretUpOutlined\n@docs carryOutFilled\n@docs carryOutOutlined\n@docs carryOutTwoTone\n@docs checkCircleFilled\n@docs checkCircleOutlined\n@docs checkCircleTwoTone\n@docs checkOutlined\n@docs checkSquareFilled\n@docs checkSquareOutlined\n@docs checkSquareTwoTone\n@docs chromeFilled\n@docs chromeOutlined\n@docs ciCircleFilled\n@docs ciCircleOutlined\n@docs ciCircleTwoTone\n@docs ciOutlined\n@docs ciTwoTone\n@docs clockCircleFilled\n@docs clockCircleOutlined\n@docs clockCircleTwoTone\n@docs closeCircleFilled\n@docs closeCircleOutlined\n@docs closeCircleTwoTone\n@docs closeOutlined\n@docs closeSquareFilled\n@docs closeSquareOutlined\n@docs closeSquareTwoTone\n@docs cloudDownloadOutlined\n@docs cloudFilled\n@docs cloudOutlined\n@docs cloudServerOutlined\n@docs cloudSyncOutlined\n@docs cloudTwoTone\n@docs cloudUploadOutlined\n@docs clusterOutlined\n@docs codeOpenBrackets\n@docs codeClosingBrackets\n@docs codeFilled\n@docs codeOutlined\n@docs codeSandboxCircleFilled\n@docs codeSandboxOutlined\n@docs codeSandboxSquareFilled\n@docs codeTwoTone\n@docs codepenCircleFilled\n@docs codepenCircleOutlined\n@docs codepenOutlined\n@docs codepenSquareFilled\n@docs coffeeOutlined\n@docs columnHeightOutlined\n@docs columnWidthOutlined\n@docs compassFilled\n@docs compassOutlined\n@docs compassTwoTone\n@docs contactsFilled\n@docs contactsOutlined\n@docs contactsTwoTone\n@docs containerFilled\n@docs containerOutlined\n@docs containerTwoTone\n@docs controlFilled\n@docs controlOutlined\n@docs controlTwoTone\n@docs copyFilled\n@docs copyOutlined\n@docs copyTwoTone\n@docs copyToClipboard\n@docs copyrightCircleFilled\n@docs copyrightCircleOutlined\n@docs copyrightCircleTwoTone\n@docs copyrightOutlined\n@docs copyrightTwoTone\n@docs creditCardFilled\n@docs creditCardOutlined\n@docs creditCardTwoTone\n@docs crownFilled\n@docs crownOutlined\n@docs crownTwoTone\n@docs customerServiceFilled\n@docs customerServiceOutlined\n@docs customerServiceTwoTone\n@docs dashOutlined\n@docs dashboardFilled\n@docs dashboardOutlined\n@docs dashboardTwoTone\n@docs databaseFilled\n@docs databaseOutlined\n@docs databaseTwoTone\n@docs deleteFilled\n@docs deleteOutlined\n@docs deleteTwoTone\n@docs deploymentUnitOutlined\n@docs desktopOutlined\n@docs diffFilled\n@docs diffOutlined\n@docs diffTwoTone\n@docs dingdingOutlined\n@docs dingtalkCircleFilled\n@docs dingtalkOutlined\n@docs dingtalkSquareFilled\n@docs disconnectOutlined\n@docs dislikeFilled\n@docs dislikeOutlined\n@docs dislikeTwoTone\n@docs dollarCircleFilled\n@docs dollarCircleOutlined\n@docs dollarCircleTwoTone\n@docs dollarOutlined\n@docs dollarTwoTone\n@docs dotChartOutlined\n@docs doubleLeftOutlined\n@docs doubleRightOutlined\n@docs downCircleFilled\n@docs downCircleOutlined\n@docs downCircleTwoTone\n@docs downOutlined\n@docs downSquareFilled\n@docs downSquareOutlined\n@docs downSquareTwoTone\n@docs downloadOutlined\n@docs dragOutlined\n@docs dribbbleCircleFilled\n@docs dribbbleOutlined\n@docs dribbbleSquareFilled\n@docs dribbbleSquareOutlined\n@docs dropboxCircleFilled\n@docs dropboxOutlined\n@docs dropboxSquareFilled\n@docs editFilled\n@docs editOutlined\n@docs editTwoTone\n@docs ellieLogo\n@docs ellipsisOutlined\n@docs enterOutlined\n@docs environmentFilled\n@docs environmentOutlined\n@docs environmentTwoTone\n@docs euroCircleFilled\n@docs euroCircleOutlined\n@docs euroCircleTwoTone\n@docs euroOutlined\n@docs euroTwoTone\n@docs exceptionOutlined\n@docs exclamationCircleFilled\n@docs exclamationCircleOutlined\n@docs exclamationCircleTwoTone\n@docs exclamationOutlined\n@docs expandAltOutlined\n@docs experimentFilled\n@docs experimentOutlined\n@docs experimentTwoTone\n@docs exportOutlined\n@docs eyeFilled\n@docs eyeInvisibleOutlined\n@docs eyeInvisibleTwoTone\n@docs eyeOutlined\n@docs eyeTwoTone\n@docs facebookFilled\n@docs facebookOutlined\n@docs fallOutlined\n@docs fastBackwardFilled\n@docs fastBackwardOutlined\n@docs fastForwardFilled\n@docs fastForwardOutlined\n@docs fileAddFilled\n@docs fileAddOutlined\n@docs fileAddTwoTone\n@docs fileDoneOutlined\n@docs fileExcelFilled\n@docs fileExcelOutlined\n@docs fileExcelTwoTone\n@docs fileExclamationFilled\n@docs fileExclamationOutlined\n@docs fileExclamationTwoTone\n@docs fileFilled\n@docs fileImageFilled\n@docs fileImageOutlined\n@docs fileImageTwoTone\n@docs fileJpgOutlined\n@docs fileMarkdownFilled\n@docs fileMarkdownOutlined\n@docs fileMarkdownTwoTone\n@docs fileOutlined\n@docs filePdfFilled\n@docs filePdfOutlined\n@docs filePdfTwoTone\n@docs filePptFilled\n@docs filePptOutlined\n@docs filePptTwoTone\n@docs fileProtectOutlined\n@docs fileSearchOutlined\n@docs fileSyncOutlined\n@docs fileTextFilled\n@docs fileTextOutlined\n@docs fileTextTwoTone\n@docs fileTwoTone\n@docs fileUnknownFilled\n@docs fileUnknownOutlined\n@docs fileUnknownTwoTone\n@docs fileWordFilled\n@docs fileWordOutlined\n@docs fileWordTwoTone\n@docs fileZipFilled\n@docs fileZipOutlined\n@docs fileZipTwoTone\n@docs filterFilled\n@docs filterOutlined\n@docs filterTwoTone\n@docs fireFilled\n@docs fireOutlined\n@docs fireTwoTone\n@docs flagFilled\n@docs flagOutlined\n@docs flagTwoTone\n@docs folderAddFilled\n@docs folderAddOutlined\n@docs folderAddTwoTone\n@docs folderFilled\n@docs folderOpenFilled\n@docs folderOpenOutlined\n@docs folderOpenTwoTone\n@docs folderOutlined\n@docs folderTwoTone\n@docs fontColorsOutlined\n@docs fontSizeOutlined\n@docs forkOutlined\n@docs formOutlined\n@docs forwardFilled\n@docs forwardOutlined\n@docs frownFilled\n@docs frownOutlined\n@docs frownTwoTone\n@docs fullscreenExitOutlined\n@docs fullscreenOutlined\n@docs fundFilled\n@docs fundOutlined\n@docs fundTwoTone\n@docs funnelPlotFilled\n@docs funnelPlotOutlined\n@docs funnelPlotTwoTone\n@docs gatewayOutlined\n@docs giftFilled\n@docs giftOutlined\n@docs giftTwoTone\n@docs githubFilled\n@docs githubOutlined\n@docs gitlabFilled\n@docs gitlabOutlined\n@docs globalOutlined\n@docs goldFilled\n@docs goldOutlined\n@docs goldTwoTone\n@docs goldenFilled\n@docs googleCircleFilled\n@docs googleOutlined\n@docs googlePlusCircleFilled\n@docs googlePlusOutlined\n@docs googlePlusSquareFilled\n@docs googleSquareFilled\n@docs hddFilled\n@docs hddOutlined\n@docs hddTwoTone\n@docs heartFilled\n@docs heartOutlined\n@docs heartTwoTone\n@docs heatMapOutlined\n@docs highlightFilled\n@docs highlightOutlined\n@docs highlightTwoTone\n@docs historyOutlined\n@docs homeFilled\n@docs homeOutlined\n@docs homeTwoTone\n@docs hourglassFilled\n@docs hourglassOutlined\n@docs hourglassTwoTone\n@docs html5Filled\n@docs html5Outlined\n@docs html5TwoTone\n@docs idcardFilled\n@docs idcardOutlined\n@docs idcardTwoTone\n@docs ieCircleFilled\n@docs ieOutlined\n@docs ieSquareFilled\n@docs importOutlined\n@docs inboxOutlined\n@docs infoCircleFilled\n@docs infoCircleOutlined\n@docs infoCircleTwoTone\n@docs infoOutlined\n@docs instagramFilled\n@docs instagramOutlined\n@docs insuranceFilled\n@docs insuranceOutlined\n@docs insuranceTwoTone\n@docs interactionFilled\n@docs interactionOutlined\n@docs interactionTwoTone\n@docs issuesCloseOutlined\n@docs italicOutlined\n@docs keyOutlined\n@docs laptopOutlined\n@docs layoutFilled\n@docs layoutOutlined\n@docs layoutTwoTone\n@docs leftCircleFilled\n@docs leftCircleOutlined\n@docs leftCircleTwoTone\n@docs leftOutlined\n@docs leftSquareFilled\n@docs leftSquareOutlined\n@docs leftSquareTwoTone\n@docs likeFilled\n@docs likeOutlined\n@docs likeTwoTone\n@docs lineChartOutlined\n@docs lineHeightOutlined\n@docs lineOutlined\n@docs linkOutlined\n@docs linkedinFilled\n@docs linkedinOutlined\n@docs loading3QuartersOutlined\n@docs loadingOutlined\n@docs lockFilled\n@docs lockOutlined\n@docs lockTwoTone\n@docs logoutOutlined\n@docs mailFilled\n@docs mailOutlined\n@docs mailTwoTone\n@docs manOutlined\n@docs medicineBoxFilled\n@docs medicineBoxOutlined\n@docs medicineBoxTwoTone\n@docs mediumCircleFilled\n@docs mediumOutlined\n@docs mediumSquareFilled\n@docs mediumWorkmarkOutlined\n@docs mehFilled\n@docs mehOutlined\n@docs mehTwoTone\n@docs menuFoldOutlined\n@docs menuOutlined\n@docs menuUnfoldOutlined\n@docs messageFilled\n@docs messageOutlined\n@docs messageTwoTone\n@docs minusCircleFilled\n@docs minusCircleOutlined\n@docs minusCircleTwoTone\n@docs minusOutlined\n@docs minusSquareFilled\n@docs minusSquareOutlined\n@docs minusSquareTwoTone\n@docs mobileFilled\n@docs mobileOutlined\n@docs mobileTwoTone\n@docs moneyCollectFilled\n@docs moneyCollectOutlined\n@docs moneyCollectTwoTone\n@docs monitorOutlined\n@docs moreOutlined\n@docs notificationFilled\n@docs notificationOutlined\n@docs notificationTwoTone\n@docs numberOutlined\n@docs orderedListOutlined\n@docs paperClipOutlined\n@docs pauseCircleFilled\n@docs pauseCircleOutlined\n@docs pauseCircleTwoTone\n@docs pauseOutlined\n@docs payCircleFilled\n@docs payCircleOutlined\n@docs percentageOutlined\n@docs phoneFilled\n@docs phoneOutlined\n@docs phoneTwoTone\n@docs picCenterOutlined\n@docs picLeftOutlined\n@docs picRightOutlined\n@docs pictureFilled\n@docs pictureOutlined\n@docs pictureTwoTone\n@docs pieChartFilled\n@docs pieChartOutlined\n@docs pieChartTwoTone\n@docs playCircleFilled\n@docs playCircleOutlined\n@docs playCircleTwoTone\n@docs playSquareFilled\n@docs playSquareOutlined\n@docs playSquareTwoTone\n@docs plusCircleFilled\n@docs plusCircleOutlined\n@docs plusCircleTwoTone\n@docs plusSquareFilled\n@docs plusSquareOutlined\n@docs plusSquareTwoTone\n@docs poundCircleFilled\n@docs poundCircleOutlined\n@docs poundCircleTwoTone\n@docs poundOutlined\n@docs poweroffOutlined\n@docs printerFilled\n@docs printerOutlined\n@docs printerTwoTone\n@docs profileFilled\n@docs profileOutlined\n@docs profileTwoTone\n@docs projectFilled\n@docs projectOutlined\n@docs projectTwoTone\n@docs propertySafetyFilled\n@docs propertySafetyOutlined\n@docs propertySafetyTwoTone\n@docs pullRequestOutlined\n@docs pushpinFilled\n@docs pushpinOutlined\n@docs pushpinTwoTone\n@docs qqCircleFilled\n@docs qqOutlined\n@docs qqSquareFilled\n@docs qrcodeOutlined\n@docs questionCircleFilled\n@docs questionCircleOutlined\n@docs questionCircleTwoTone\n@docs questionOutlined\n@docs radarChartOutlined\n@docs radiusBottomleftOutlined\n@docs radiusBottomrightOutlined\n@docs radiusSettingOutlined\n@docs radiusUpleftOutlined\n@docs radiusUprightOutlined\n@docs readFilled\n@docs readOutlined\n@docs reconciliationFilled\n@docs reconciliationOutlined\n@docs reconciliationTwoTone\n@docs redEnvelopeFilled\n@docs redEnvelopeOutlined\n@docs redEnvelopeTwoTone\n@docs redditCircleFilled\n@docs redditOutlined\n@docs redditSquareFilled\n@docs redoOutlined\n@docs reloadOutlined\n@docs restFilled\n@docs restTwoTone\n@docs retweetOutlined\n@docs rightCircleFilled\n@docs rightCircleOutlined\n@docs rightCircleTwoTone\n@docs rightOutlined\n@docs rightSquareFilled\n@docs rightSquareOutlined\n@docs rightSquareTwoTone\n@docs riseOutlined\n@docs robotOutlined\n@docs rocketFilled\n@docs rocketOutlined\n@docs rocketTwoTone\n@docs rollbackOutlined\n@docs safetyCertificateFilled\n@docs safetyCertificateOutlined\n@docs safetyCertificateTwoTone\n@docs safetyOutlined\n@docs saveFilled\n@docs saveOutlined\n@docs saveTwoTone\n@docs scanOutlined\n@docs scheduleFilled\n@docs scheduleOutlined\n@docs scheduleTwoTone\n@docs scissorOutlined\n@docs searchOutlined\n@docs securityScanFilled\n@docs securityScanOutlined\n@docs securityScanTwoTone\n@docs selectOutlined\n@docs settingFilled\n@docs settingOutlined\n@docs settingTwoTone\n@docs shakeOutlined\n@docs shareAltOutlined\n@docs shopFilled\n@docs shopOutlined\n@docs shopTwoTone\n@docs shoppingCartOutlined\n@docs shoppingFilled\n@docs shoppingOutlined\n@docs shoppingTwoTone\n@docs shrinkOutlined\n@docs sketchCircleFilled\n@docs sketchOutlined\n@docs sketchSquareFilled\n@docs skinFilled\n@docs skinOutlined\n@docs skinTwoTone\n@docs skypeFilled\n@docs skypeOutlined\n@docs slackCircleFilled\n@docs slackOutlined\n@docs slackSquareFilled\n@docs slackSquareOutlined\n@docs slidersFilled\n@docs slidersOutlined\n@docs slidersTwoTone\n@docs smallDashOutlined\n@docs smileFilled\n@docs smileOutlined\n@docs smileTwoTone\n@docs snippetsFilled\n@docs snippetsOutlined\n@docs snippetsTwoTone\n@docs solutionOutlined\n@docs sortAscendingOutlined\n@docs sortDescendingOutlined\n@docs soundFilled\n@docs soundOutlined\n@docs soundTwoTone\n@docs starFilled\n@docs starOutlined\n@docs starTwoTone\n@docs stepBackwardFilled\n@docs stepBackwardOutlined\n@docs stepForwardFilled\n@docs stepForwardOutlined\n@docs stockOutlined\n@docs stopFilled\n@docs stopOutlined\n@docs stopTwoTone\n@docs strikethroughOutlined\n@docs swapLeftOutlined\n@docs swapOutlined\n@docs swapRightOutlined\n@docs switcherFilled\n@docs switcherOutlined\n@docs switcherTwoTone\n@docs syncOutlined\n@docs tableOutlined\n@docs tabletFilled\n@docs tabletOutlined\n@docs tabletTwoTone\n@docs tagFilled\n@docs tagOutlined\n@docs tagTwoTone\n@docs tagsFilled\n@docs tagsOutlined\n@docs tagsTwoTone\n@docs taobaoCircleFilled\n@docs taobaoCircleOutlined\n@docs taobaoOutlined\n@docs taobaoSquareFilled\n@docs teamOutlined\n@docs thunderboltFilled\n@docs thunderboltOutlined\n@docs thunderboltTwoTone\n@docs toTopOutlined\n@docs toolFilled\n@docs toolOutlined\n@docs toolTwoTone\n@docs trademarkCircleFilled\n@docs trademarkCircleOutlined\n@docs trademarkCircleTwoTone\n@docs trademarkOutlined\n@docs transactionOutlined\n@docs trophyFilled\n@docs trophyOutlined\n@docs trophyTwoTone\n@docs twitterCircleFilled\n@docs twitterOutlined\n@docs twitterSquareFilled\n@docs underlineOutlined\n@docs undoOutlined\n@docs unlockFilled\n@docs unlockOutlined\n@docs unlockTwoTone\n@docs unorderedListOutlined\n@docs upCircleFilled\n@docs upCircleOutlined\n@docs upCircleTwoTone\n@docs upOutlined\n@docs upSquareFilled\n@docs upSquareOutlined\n@docs upSquareTwoTone\n@docs uploadOutlined\n@docs usbFilled\n@docs usbOutlined\n@docs usbTwoTone\n@docs userAddOutlined\n@docs userDeleteOutlined\n@docs userOutlined\n@docs usergroupAddOutlined\n@docs usergroupDeleteOutlined\n@docs verticalAlignBottomOutlined\n@docs verticalAlignMiddleOutlined\n@docs verticalAlignTopOutlined\n@docs verticalLeftOutlined\n@docs verticalRightOutlined\n@docs videoCameraFilled\n@docs videoCameraOutlined\n@docs videoCameraTwoTone\n@docs walletFilled\n@docs walletOutlined\n@docs walletTwoTone\n@docs warningFilled\n@docs warningOutlined\n@docs warningTwoTone\n@docs wechatFilled\n@docs wechatOutlined\n@docs weiboCircleFilled\n@docs weiboCircleOutlined\n@docs weiboOutlined\n@docs weiboSquareFilled\n@docs weiboSquareOutlined\n@docs wifiOutlined\n@docs windowsFilled\n@docs windowsOutlined\n@docs womanOutlined\n@docs yahooFilled\n@docs yahooOutlined\n@docs youtubeFilled\n@docs youtubeOutlined\n@docs yuqueFilled\n@docs yuqueOutlined\n@docs zhihuCircleFilled\n@docs zhihuOutlined\n@docs zhihuSquareFilled\n@docs zoomInOutlined\n@docs zoomOutOutlined\n\n",
        "unions": [
            {
                "name": "Icon",
                "comment": " An opaque representation of an Icon.\n\nThis is the return type of all icon components.\n\nTo actually render them onto the dom, you need to call `toHtml`\n\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "IconSize",
                "comment": " The size of the icon. To be used with `withSize`.\n",
                "args": [],
                "cases": [
                    [
                        "Small",
                        []
                    ],
                    [
                        "Medium",
                        []
                    ],
                    [
                        "Large",
                        []
                    ],
                    [
                        "CustomPx",
                        [
                            "Basics.Float"
                        ]
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "accountBookFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "accountBookOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "accountBookTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alertFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alertOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alertTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alibabaOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alignCenterOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alignLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alignRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alipayCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alipayCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alipayOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "alipaySquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "aliwangwangFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "aliwangwangOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "aliyunOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "amazonCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "amazonOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "amazonSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "androidFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "androidOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "antCloudOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "antDesignOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "apartmentOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "apiFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "apiOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "apiTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "appleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "appleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "appstoreFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "appstoreOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "appstoreTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "areaChartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "arrowDownOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "arrowLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "arrowRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "arrowUpOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "arrowsAltOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "audioFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "audioOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "audioTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "auditOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "backwardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "backwardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bankFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bankOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bankTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "barChartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "barcodeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "barsOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "behanceCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "behanceOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "behanceSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "behanceSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bellFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bellOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bellTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bgColorsOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "blockOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "boldOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bookFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bookOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bookTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderBottomOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderHorizontalOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderInnerOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderOuterOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderTopOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "borderVerticleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "boxPlotFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "boxPlotOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "boxPlotTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "branchesOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bugFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bugOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bugTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "buildFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "buildOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "buildTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bulbFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bulbOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "bulbTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "calculatorFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "calculatorOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "calculatorTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "calendarFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "calendarOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "calendarTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cameraFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cameraOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cameraTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "carFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "carOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "carTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretDownFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretDownOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretLeftFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretRightFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretUpFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "caretUpOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "carryOutFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "carryOutOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "carryOutTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "checkCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "checkCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "checkCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "checkOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "checkSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "checkSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "checkSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "chromeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "chromeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ciCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ciCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ciCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ciOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ciTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "clockCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "clockCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "clockCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "closeCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "closeCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "closeCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "closeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "closeSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "closeSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "closeSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cloudDownloadOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cloudFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cloudOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cloudServerOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cloudSyncOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cloudTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "cloudUploadOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "clusterOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeClosingBrackets",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeOpenBrackets",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeSandboxCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeSandboxOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeSandboxSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codeTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codepenCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codepenCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codepenOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "codepenSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "coffeeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "columnHeightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "columnWidthOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "compassFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "compassOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "compassTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "contactsFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "contactsOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "contactsTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "containerFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "containerOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "containerTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "controlFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "controlOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "controlTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyToClipboard",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyrightCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyrightCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyrightCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyrightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "copyrightTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "creditCardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "creditCardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "creditCardTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "crownFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "crownOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "crownTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "customerServiceFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "customerServiceOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "customerServiceTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dashOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dashboardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dashboardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dashboardTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "databaseFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "databaseOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "databaseTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "deleteFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "deleteOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "deleteTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "deploymentUnitOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "desktopOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "diffFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "diffOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "diffTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dingdingOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dingtalkCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dingtalkOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dingtalkSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "disconnectOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dislikeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dislikeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dislikeTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dollarCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dollarCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dollarCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dollarOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dollarTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dotChartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "doubleLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "doubleRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "downloadOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dragOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dribbbleCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dribbbleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dribbbleSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dribbbleSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dropboxCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dropboxOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "dropboxSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "editFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "editOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "editTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ellieLogo",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ellipsisOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "enterOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "environmentFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "environmentOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "environmentTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "euroCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "euroCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "euroCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "euroOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "euroTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "exceptionOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "exclamationCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "exclamationCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "exclamationCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "exclamationOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "expandAltOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "experimentFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "experimentOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "experimentTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "exportOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "eyeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "eyeInvisibleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "eyeInvisibleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "eyeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "eyeTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "facebookFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "facebookOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fallOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fastBackwardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fastBackwardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fastForwardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fastForwardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileAddFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileAddOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileAddTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileDoneOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileExcelFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileExcelOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileExcelTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileExclamationFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileExclamationOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileExclamationTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileImageFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileImageOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileImageTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileJpgOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileMarkdownFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileMarkdownOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileMarkdownTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filePdfFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filePdfOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filePdfTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filePptFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filePptOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filePptTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileProtectOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileSearchOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileSyncOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileTextFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileTextOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileTextTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileUnknownFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileUnknownOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileUnknownTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileWordFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileWordOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileWordTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileZipFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileZipOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fileZipTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filterFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filterOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "filterTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fireFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fireOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fireTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "flagFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "flagOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "flagTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderAddFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderAddOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderAddTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderOpenFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderOpenOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderOpenTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "folderTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fontColorsOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fontSizeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "forkOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "formOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "forwardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "forwardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "frownFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "frownOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "frownTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fullscreenExitOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fullscreenOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fundFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fundOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "fundTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "funnelPlotFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "funnelPlotOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "funnelPlotTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "gatewayOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "giftFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "giftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "giftTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "githubFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "githubOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "gitlabFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "gitlabOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "globalOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "goldFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "goldOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "goldTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "goldenFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "googleCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "googleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "googlePlusCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "googlePlusOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "googlePlusSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "googleSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "hddFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "hddOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "hddTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "heartFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "heartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "heartTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "heatMapOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "highlightFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "highlightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "highlightTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "historyOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "homeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "homeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "homeTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "hourglassFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "hourglassOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "hourglassTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "html5Filled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "html5Outlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "html5TwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "idcardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "idcardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "idcardTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ieCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ieOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "ieSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "importOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "inboxOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "infoCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "infoCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "infoCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "infoOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "instagramFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "instagramOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "insuranceFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "insuranceOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "insuranceTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "interactionFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "interactionOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "interactionTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "issuesCloseOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "italicOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "keyOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "laptopOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "layoutFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "layoutOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "layoutTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "leftCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "leftCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "leftCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "leftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "leftSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "leftSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "leftSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "likeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "likeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "likeTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "lineChartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "lineHeightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "lineOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "linkOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "linkedinFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "linkedinOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "loading3QuartersOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "loadingOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "lockFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "lockOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "lockTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "logoutOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mailFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mailOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mailTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "manOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "medicineBoxFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "medicineBoxOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "medicineBoxTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mediumCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mediumOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mediumSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mediumWorkmarkOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mehFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mehOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mehTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "menuFoldOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "menuOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "menuUnfoldOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "messageFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "messageOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "messageTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "minusCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "minusCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "minusCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "minusOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "minusSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "minusSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "minusSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mobileFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mobileOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "mobileTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "moneyCollectFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "moneyCollectOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "moneyCollectTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "monitorOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "moreOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "notificationFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "notificationOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "notificationTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "numberOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "orderedListOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "paperClipOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pauseCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pauseCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pauseCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pauseOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "payCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "payCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "percentageOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "phoneFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "phoneOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "phoneTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "picCenterOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "picLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "picRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pictureFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pictureOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pictureTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pieChartFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pieChartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pieChartTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "playCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "playCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "playCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "playSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "playSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "playSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "plusCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "plusCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "plusCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "plusSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "plusSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "plusSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "poundCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "poundCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "poundCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "poundOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "poweroffOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "printerFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "printerOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "printerTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "profileFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "profileOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "profileTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "projectFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "projectOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "projectTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "propertySafetyFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "propertySafetyOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "propertySafetyTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pullRequestOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pushpinFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pushpinOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "pushpinTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "qqCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "qqOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "qqSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "qrcodeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "questionCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "questionCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "questionCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "questionOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "radarChartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "radiusBottomleftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "radiusBottomrightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "radiusSettingOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "radiusUpleftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "radiusUprightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "readFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "readOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "reconciliationFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "reconciliationOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "reconciliationTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "redEnvelopeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "redEnvelopeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "redEnvelopeTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "redditCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "redditOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "redditSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "redoOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "reloadOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "restFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "restTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "retweetOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rightCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rightCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rightCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rightSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rightSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rightSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "riseOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "robotOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rocketFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rocketOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rocketTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "rollbackOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "safetyCertificateFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "safetyCertificateOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "safetyCertificateTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "safetyOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "saveFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "saveOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "saveTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "scanOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "scheduleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "scheduleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "scheduleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "scissorOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "searchOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "securityScanFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "securityScanOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "securityScanTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "selectOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "settingFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "settingOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "settingTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shakeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shareAltOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shopFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shopOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shopTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shoppingCartOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shoppingFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shoppingOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shoppingTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "shrinkOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "sketchCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "sketchOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "sketchSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "skinFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "skinOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "skinTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "skypeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "skypeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "slackCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "slackOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "slackSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "slackSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "slidersFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "slidersOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "slidersTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "smallDashOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "smileFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "smileOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "smileTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "snippetsFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "snippetsOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "snippetsTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "solutionOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "sortAscendingOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "sortDescendingOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "soundFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "soundOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "soundTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "starFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "starOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "starTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stepBackwardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stepBackwardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stepForwardFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stepForwardOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stockOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stopFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stopOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "stopTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "strikethroughOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "swapLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "swapOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "swapRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "switcherFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "switcherOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "switcherTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "syncOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tableOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tabletFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tabletOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tabletTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tagFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tagOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tagTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tagsFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tagsOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "tagsTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "taobaoCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "taobaoCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "taobaoOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "taobaoSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "teamOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "thunderboltFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "thunderboltOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "thunderboltTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "toHtml",
                "comment": " Convert an `Icon msg` into a `Html msg`\n",
                "type": "Ant.Icons.Icon msg -> Html.Html msg"
            },
            {
                "name": "toTopOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "toolFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "toolOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "toolTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "trademarkCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "trademarkCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "trademarkCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "trademarkOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "transactionOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "trophyFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "trophyOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "trophyTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "twitterCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "twitterOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "twitterSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "underlineOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "undoOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "unlockFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "unlockOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "unlockTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "unorderedListOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "upCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "upCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "upCircleTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "upOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "upSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "upSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "upSquareTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "uploadOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "usbFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "usbOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "usbTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "userAddOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "userDeleteOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "userOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "usergroupAddOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "usergroupDeleteOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "verticalAlignBottomOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "verticalAlignMiddleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "verticalAlignTopOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "verticalLeftOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "verticalRightOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "videoCameraFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "videoCameraOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "videoCameraTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "walletFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "walletOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "walletTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "warningFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "warningOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "warningTwoTone",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "wechatFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "wechatOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "weiboCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "weiboCircleOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "weiboOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "weiboSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "weiboSquareOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "wifiOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "windowsFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "windowsOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "withDimensions",
                "comment": " Alter the width and height of the svg Icon (which also alters the aspect ratio). The width and height passed into this function are then used as the `viewBox` attributes for width and height.\n\nSee <https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox> for more info.\n\n    codeOpenBrackets\n        |> withDimensions 100 100\n        |> toHtml\n\n",
                "type": "Ant.Icons.Width -> Ant.Icons.Height -> Ant.Icons.Icon msg -> Ant.Icons.Icon msg"
            },
            {
                "name": "withSize",
                "comment": " Alter the size of the Icon.\n\n    codeOpenBrackets\n        |> withSize Large\n        |> toHtml\n\n",
                "type": "Ant.Icons.IconSize -> Ant.Icons.Icon msg -> Ant.Icons.Icon msg"
            },
            {
                "name": "withStyles",
                "comment": " Add styles to your SVG Icon\n\n    codeOpenBrackets\n        |> withStyles [ ( \"width\", \"100%\" ) ]\n        |> toHtml\n\n",
                "type": "Ant.Icons.Styles -> Ant.Icons.Icon msg -> Ant.Icons.Icon msg"
            },
            {
                "name": "womanOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "yahooFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "yahooOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "youtubeFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "youtubeOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "yuqueFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "yuqueOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "zhihuCircleFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "zhihuOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "zhihuSquareFilled",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "zoomInOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            },
            {
                "name": "zoomOutOutlined",
                "comment": " a nice lil icon\n",
                "type": "Ant.Icons.Icon msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Input",
        "comment": " Input widget for data entry\n\n\n## Creating an input\n\n@docs Input, input\n\n\n## Modifying the input\n\n@docs InputSize, withSize, withPasswordType, withPlaceholder, withTextAreaType\n\n\n## Rendering the input\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "Input",
                "comment": " Represents a customizeable input.\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "InputSize",
                "comment": " Determines the vertical height of the input\n",
                "args": [],
                "cases": [
                    [
                        "Default",
                        []
                    ],
                    [
                        "Large",
                        []
                    ],
                    [
                        "Small",
                        []
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "input",
                "comment": " Create a customizeable input component\n",
                "type": "(String.String -> msg) -> Ant.Input.Input msg"
            },
            {
                "name": "toHtml",
                "comment": " Convert the input into a `Html msg`\n",
                "type": "String.String -> Ant.Input.Input msg -> Html.Html msg"
            },
            {
                "name": "withPasswordType",
                "comment": " Modify the type of the input.\n\n    input InputMsg\n        |> withPasswordType VisibilityToggled model.visibility\n        |> toHtml model.inputValue\n\n",
                "type": "(Basics.Bool -> msg) -> Basics.Bool -> Ant.Input.Input msg -> Ant.Input.Input msg"
            },
            {
                "name": "withPlaceholder",
                "comment": " Add a placeholder to the input\n",
                "type": "String.String -> Ant.Input.Input msg -> Ant.Input.Input msg"
            },
            {
                "name": "withSize",
                "comment": " Change the size of the input\n",
                "type": "Ant.Input.InputSize -> Ant.Input.Input msg -> Ant.Input.Input msg"
            },
            {
                "name": "withTextAreaType",
                "comment": " Turn the input into a text area. You must specify the vertical height of the text area in rows as defined by the [`textarea` spec](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea).\n\nIf you specify a value less than 1 for rows, then we'll use a default value of 4.\n\n    view : Html msg\n    view =\n        input TextAreaVAlueChanged\n            |> withTextAreaType { rows = 10 }\n            |> toHtml\n\n",
                "type": "{ rows : Basics.Int } -> Ant.Input.Input msg -> Ant.Input.Input msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Layout",
        "comment": " Primitives for creating typical page layouts\n\nFrom: <https://ant.design/components/layout/>\n\n\n# Introduction\n\nEach of the primitives below creates a `LayoutTree` that represents that shape of your layout.\n\nThis module allows for 2-column and 3-column layouts.\n\nThis module defines a recursive LayoutTree data structure, which allows for layouts of large depth and complexity.\n\n@docs LayoutTree\n\n\n## Primitives\n\nThe following primitives take some content (as `Html msg`) and returns to you a `LayoutTree` that you can continue appending to\n\nExample:\n\n    sidebar =\n        Layout.sidebar (componentMenu model.activeRoute)\n            |> Layout.sidebarWidth 300\n            |> Layout.sidebarToTree\n\n    layout : LayoutTree Msg\n    layout =\n        Layout.layout2\n            (Layout.header <| toUnstyled navBar)\n            (Layout.layout2\n                sidebar\n                (Layout.layout2\n                    (Layout.content <| toUnstyled componentPageShell)\n                    (Layout.footer <| toUnstyled footer)\n                )\n            )\n\n@docs header, content, footer, layout, layout2\n\n\n## Customizeable Primitives\n\nThe following primitives do not return a `LayoutTree` immediately. Rather, they return an intermediary data structure that you can then customize further before converting it into a `LayoutTree` node that can be appended to your main `LayoutTree`\n\n@docs Sidebar, sidebar, sidebarWidth, sidebarToTree\n\n\n## Other\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "LayoutTree",
                "comment": " The various kinds of nodes represented by a LayoutTree\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "Sidebar",
                "comment": " A sidebar\n",
                "args": [
                    "msg"
                ],
                "cases": []
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "content",
                "comment": " Create a content node in your LayoutTree\n\nThis node will be rendered beneath a header (if a header is provided), but above the footer (if a footer is provided)\n\n",
                "type": "Html.Html msg -> Ant.Layout.LayoutTree msg"
            },
            {
                "name": "footer",
                "comment": " Create a footer node in your LayoutTree\n\nThis node will be rendered beneath all other nodes in your LayoutTree, just as you would expect from a footer.\n\n",
                "type": "Html.Html msg -> Ant.Layout.LayoutTree msg"
            },
            {
                "name": "header",
                "comment": " Create a header node in your LayoutTree\n\nThis node will be rendered horizontally at the top of your layout tree\n\n",
                "type": "Html.Html msg -> Ant.Layout.LayoutTree msg"
            },
            {
                "name": "layout",
                "comment": " Generate a three-column layout from three LayoutTree's (see example above)\n",
                "type": "Ant.Layout.LayoutTree msg -> Ant.Layout.LayoutTree msg -> Ant.Layout.LayoutTree msg -> Ant.Layout.LayoutTree msg"
            },
            {
                "name": "layout2",
                "comment": " Generate a two-column layout from two LayoutTree's (see example above)\n",
                "type": "Ant.Layout.LayoutTree msg -> Ant.Layout.LayoutTree msg -> Ant.Layout.LayoutTree msg"
            },
            {
                "name": "sidebar",
                "comment": " Create a customizeable sidebar\n\nIn order to append the sidebar to your LayoutTree, you must call `sidebarToTree`\n\n    sideBar innerNodes\n        |> sidebarWidth 40\n        |> sidebarToTree\n\n",
                "type": "Html.Html msg -> Ant.Layout.Sidebar msg"
            },
            {
                "name": "sidebarToTree",
                "comment": " Convert a `Sidebar` into a `LayoutTree` node so that you may append it to a `LayoutTree`\n",
                "type": "Ant.Layout.Sidebar msg -> Ant.Layout.LayoutTree msg"
            },
            {
                "name": "sidebarWidth",
                "comment": " Customize the width (in pixels) of the sidebar\n",
                "type": "Basics.Float -> Ant.Layout.Sidebar msg -> Ant.Layout.Sidebar msg"
            },
            {
                "name": "toHtml",
                "comment": " Convert your layout tree into good old `Html msg`\n",
                "type": "Ant.Layout.LayoutTree msg -> Html.Html msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Menu",
        "comment": " Primitives for creating Menus.\n\nThis module comes with three big menu primitives:\n\n  - Menu: The main container of your menu\n  - SubMenu: A menu within your menu. SubMenu's are collapsable.\n  - ItemGroup: A grouping of items with a label.\n\nThe overarching idea in this module is that you start with the inner items of your menu, constructing it piece by piece, until you have\nall of the elements of the Menu. Once that is done, then you can create your Menu and turn it into `Html msg`.\n\nA good example can be found in this project's [showcase](https://github.com/supermacro/elm-antd/blob/master/showcase/src/elm/Router.elm#L277).\n\n@docs initMenuItem, selected, initMenu, initSubMenu, initItemGroup, pushItem, pushSubMenu, pushItemGroup, pushItemToSubMenu, pushItemGroupToSubMenu, pushSubMenuToSubMenu, pushItemToItemGroup, toHtml, Menu, SubMenu, ItemGroup, MenuMode\n\n",
        "unions": [
            {
                "name": "ItemGroup",
                "comment": " Represents a grouping of MenuItems\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "Menu",
                "comment": " Represents a Menu, its configuration and the Menu's content\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "MenuMode",
                "comment": " This type defines how the menu will be positioned\n",
                "args": [],
                "cases": [
                    [
                        "Vertical",
                        []
                    ],
                    [
                        "Horizontal",
                        []
                    ],
                    [
                        "Inline",
                        []
                    ]
                ]
            },
            {
                "name": "SubMenu",
                "comment": " Represents a sub-menu, and the submenu's associated configuration / state, as well as the menu's contents\n",
                "args": [
                    "msg"
                ],
                "cases": []
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "initItemGroup",
                "comment": " Initialize a item group with a set of associated MenuItem's\n",
                "type": "Ant.Menu.ItemGroupTitle -> List.List (Ant.Menu.MenuItem msg) -> Ant.Menu.ItemGroup msg"
            },
            {
                "name": "initMenu",
                "comment": " Initialize a menu with no content. This is useful when constructing your menu using folds.\n",
                "type": "Ant.Menu.Menu msg"
            },
            {
                "name": "initMenuItem",
                "comment": " Given a `msg` and some contents, create a menu item\n",
                "type": "msg -> Html.Html msg -> Ant.Menu.MenuItem msg"
            },
            {
                "name": "initSubMenu",
                "comment": " Create an empty nested menu\n",
                "type": "Ant.Menu.SubMenu msg"
            },
            {
                "name": "pushItem",
                "comment": " push a menu item to the end of the menu\n",
                "type": "Ant.Menu.MenuItem msg -> Ant.Menu.Menu msg -> Ant.Menu.Menu msg"
            },
            {
                "name": "pushItemGroup",
                "comment": " push a item group to the end of the menu\n",
                "type": "Ant.Menu.ItemGroup msg -> Ant.Menu.Menu msg -> Ant.Menu.Menu msg"
            },
            {
                "name": "pushItemGroupToSubMenu",
                "comment": " Push a Item Group to the end of the SubMenu\n",
                "type": "Ant.Menu.ItemGroup msg -> Ant.Menu.SubMenu msg -> Ant.Menu.SubMenu msg"
            },
            {
                "name": "pushItemToItemGroup",
                "comment": " Add a MenuItem to the end of the ItemGroup\n",
                "type": "Ant.Menu.MenuItem msg -> Ant.Menu.ItemGroup msg -> Ant.Menu.ItemGroup msg"
            },
            {
                "name": "pushItemToSubMenu",
                "comment": " Push a MenuItem to the end of the SubMenu\n",
                "type": "Ant.Menu.MenuItem msg -> Ant.Menu.SubMenu msg -> Ant.Menu.SubMenu msg"
            },
            {
                "name": "pushSubMenu",
                "comment": " push a SubMenu to the end of the menu\n",
                "type": "Ant.Menu.SubMenu msg -> Ant.Menu.Menu msg -> Ant.Menu.Menu msg"
            },
            {
                "name": "pushSubMenuToSubMenu",
                "comment": " Push a SubMenu to the end of the SubMenu\n",
                "type": "Ant.Menu.SubMenu msg -> Ant.Menu.SubMenu msg -> Ant.Menu.SubMenu msg"
            },
            {
                "name": "selected",
                "comment": " Mark the menu item as selected\n",
                "type": "Ant.Menu.MenuItem msg -> Ant.Menu.MenuItem msg"
            },
            {
                "name": "toHtml",
                "comment": " Turn your Menu into a `Html msg`\n",
                "type": "Ant.Menu.Menu msg -> Html.Html msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Modal",
        "comment": " Render a Modal dialog to the page.\n\n\n# Example:\n\n    type Msg\n        = ModalStateChanged Ant.Modal.ModalState\n        | ModalConfirmClicked Ant.Modal.ModalState\n        | LaunchMisslesButtonClicked\n\n    update : Msg -> Model -> ( Model, Cmd msg )\n    update msg model =\n        case msg of\n            LaunchMisslesButtonClicked ->\n                ( { model | modalOpen = True }, Cmd.none )\n\n            ModalStateChanged newState ->\n                ( { model | modalOpen = newState }, Cmd.none )\n\n            ModalConfirmClicked newState ->\n                let\n                    cmd =\n                        initiateLaunchSequence model\n                in\n                ( { model | modalOpen = newState }, cmd )\n\n    view : Model -> Html Msg\n    view model =\n        let\n            buttonToggle =\n                button \"Fire ze missles!\"\n                    |> Btn.withType Btn.Primary\n                    |> Btn.onClick LaunchMisslesButtonClicked\n                    |> Btn.toHtml\n\n            modalFooter =\n                Modal.footer\n                    |> Modal.withOnConfirm ModalConfirmClicked\n\n            htmlModal =\n                Modal.modal modalContents\n                    |> Modal.withTitle \"Are you sure you want to launch ze missles?\"\n                    |> Modal.withOnCancel ModalStateChanged\n                    |> Modal.withFooter modalFooter\n                    |> Modal.withVerticalOffsetInPercentage 35\n                    |> Modal.toHtml model.modalOpen\n        in\n        div [] [ htmlModal, buttonToggle ]\n\n\n# Definition\n\n@docs Modal, ModalState\n\n\n# Creating and configuring a Modal\n\n@docs modal, withClosable, withMask, withOnCancel, withTitle, withVerticalOffsetInPercentage, withVerticalOffsetInPixels\n\n@docs withFooter\n\n\n#### Footer Configuration\n\n@docs ModalFooter, footer, withCancelText, withOnConfirm, withOnConfirmText\n\n\n# Rendering the Modal\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "Modal",
                "comment": " Opaque type that represents a configurable Modal.\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "ModalFooter",
                "comment": " Represents a configurable Modal footer. See the [`footer`](#footer) function for creating this type.\n\nSee the [Footer Configuration](#footer-configuration) section on options for configuring a `ModalFooter`.\n\n",
                "args": [
                    "msg"
                ],
                "cases": []
            }
        ],
        "aliases": [
            {
                "name": "ModalState",
                "comment": " State of the Modal, currently this is a simple Bool alias that represents the Modal's visibility, but it may change in the future to hold other state.\n\nThis value must be saved in your Model.\n\n",
                "args": [],
                "type": "Basics.Bool"
            }
        ],
        "values": [
            {
                "name": "footer",
                "comment": " Create a configurable [`Footer`](#Footer) to be rendered with the [`withFooter`](#withFooter) function.\n\nBy default, a footer is rendered with nothing inside of it. If you want a \"cancel\" button, you need to call `withOnCancel` on the Modal itself. And if you want a confirm button, you need to call [`withOnConfirm`](#withOnConfirm) on the footer.\n\n",
                "type": "Ant.Modal.ModalFooter msg"
            },
            {
                "name": "modal",
                "comment": " Create a configurable Modal that will render whatever you pass into it within the body of the Modal.\n",
                "type": "Html.Html msg -> Ant.Modal.Modal msg"
            },
            {
                "name": "toHtml",
                "comment": " Render the Modal.\n",
                "type": "Ant.Modal.ModalState -> Ant.Modal.Modal msg -> Html.Html msg"
            },
            {
                "name": "withCancelText",
                "comment": " Set a custom prompt for the cancel button on the modal footer.\n\nRecall that to actually render a \"cancel\" button, you need to call [`withOnCancel`](#withOnCancel) on the Modal itself.\n\n",
                "type": "String.String -> Ant.Modal.ModalFooter msg -> Ant.Modal.ModalFooter msg"
            },
            {
                "name": "withClosable",
                "comment": " Whether a close (`x`) button is visible on top right of the modal dialog or not.\n\nThe default is `True` already.\n\nNote that this icon will only render if the option is toggled on **AND** the `withOnCancel` function has been called.\n\n",
                "type": "Basics.Bool -> Ant.Modal.Modal msg -> Ant.Modal.Modal msg"
            },
            {
                "name": "withFooter",
                "comment": " Whether a [`ModalFooter`](#ModalFooter) should be added to the Modal. By default the Modal does not have a footer.\n\nSee the [Footer Configuration](#footer-configuration) section on creating and configuring footers.\n\n",
                "type": "Ant.Modal.ModalFooter msg -> Ant.Modal.Modal msg -> Ant.Modal.Modal msg"
            },
            {
                "name": "withMask",
                "comment": " Whether a opaque dark grey background gets rendered behind the Modal to provide visual emphasis on to the Modal.\n\nBy default this value is set to `True`.\n\nThe \"click out\" behaviour is not affected by this combinator. Clicking outside of the modal still hides the Modal if you have configured [`withOnCancel`](#withOnCancel).\n\n",
                "type": "Basics.Bool -> Ant.Modal.Modal msg -> Ant.Modal.Modal msg"
            },
            {
                "name": "withOnCancel",
                "comment": " Specify a `msg` tag that will be triggered when a user clicks out of the Modal (on the opaque mask surrounding the Modal), [close button on top right](#withClosable) or Cancel button on the [`footer`](#footer).\n",
                "type": "(Ant.Modal.ModalState -> msg) -> Ant.Modal.Modal msg -> Ant.Modal.Modal msg"
            },
            {
                "name": "withOnConfirm",
                "comment": " Used to render a primary call-to-action on the footer modal.\n\n    type Msg = ModalConfirmClicked Modal.ModalState\n\n    update : Msg -> Model -> ( Model, Cmd msg )\n    update msg =\n        case msg of\n            ModalConfirmClicked newState ->\n                ({ modal | missleLaunchModal | newState }, launchTheMissles )\n\n    modalFooter =\n        Modal.footer\n            |> Modal.withOnConfirm ModalConfirmClicked\n\n    myModal = Modal.modal\n        |> Modal.withFooter modalFooter\n\n",
                "type": "(Ant.Modal.ModalState -> msg) -> Ant.Modal.ModalFooter msg -> Ant.Modal.ModalFooter msg"
            },
            {
                "name": "withOnConfirmText",
                "comment": " Set a custom prompt for the primary call-to-action on the modal footer.\n",
                "type": "String.String -> Ant.Modal.ModalFooter msg -> Ant.Modal.ModalFooter msg"
            },
            {
                "name": "withTitle",
                "comment": " Specify a title to be rendered at the Header of the Modal.\n",
                "type": "String.String -> Ant.Modal.Modal msg -> Ant.Modal.Modal msg"
            },
            {
                "name": "withVerticalOffsetInPercentage",
                "comment": " Specify a percentage value for positioning the modal vertically with respect to the documents height.\n\nBy default this value is set to `15`.\n\n",
                "type": "Basics.Float -> Ant.Modal.Modal msg -> Ant.Modal.Modal msg"
            },
            {
                "name": "withVerticalOffsetInPixels",
                "comment": " Specify a pixel value for positioning the modal vertically with respect to the documents height.\n",
                "type": "Basics.Float -> Ant.Modal.Modal msg -> Ant.Modal.Modal msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Space",
        "comment": " Utilities for setting spacing between components\n\n\n# Creating a Space value\n\n@docs space\n\nNote that by default, a Space value is set to be horizontally layed out with a \"small\" space between elements\n\n\n# Customizing the layout between components\n\n@docs direction, withSize, SpaceDirection, SpaceSize, withFullCrossAxisSize\n\n\n# Rendering your Space component\n\n@docs toHtml\n\n",
        "unions": [
            {
                "name": "SpaceDirection",
                "comment": " Direction of the layout (think flexbox direction)\n",
                "args": [],
                "cases": [
                    [
                        "Horizontal",
                        []
                    ],
                    [
                        "Vertical",
                        []
                    ]
                ]
            },
            {
                "name": "SpaceSize",
                "comment": " The size of the space between elements\n",
                "args": [],
                "cases": [
                    [
                        "Small",
                        []
                    ],
                    [
                        "Medium",
                        []
                    ],
                    [
                        "Large",
                        []
                    ],
                    [
                        "Custom",
                        [
                            "Basics.Float"
                        ]
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "direction",
                "comment": " Set the direction of your Space value\n\n    space myElementList\n        |> direction Vertical\n\n",
                "type": "Ant.Space.SpaceDirection -> Ant.Space.Space msg -> Ant.Space.Space msg"
            },
            {
                "name": "space",
                "comment": " Create a Space value with default values\n\n    space [ myEl, myOtherEl, mySuperCoolEl ]\n\n",
                "type": "List.List (Html.Html msg) -> Ant.Space.Space msg"
            },
            {
                "name": "toHtml",
                "comment": " Convert your Space into a `Html msg`\n",
                "type": "Ant.Space.Space msg -> Html.Html msg"
            },
            {
                "name": "withFullCrossAxisSize",
                "comment": " Whether to fill up the full space (100% width or 100% height) of the perpendicular axis. The main axis of a `Space` container is determined by the direction of the `Space` container.\n\nIf the direction is `Horizontal` then the cross axis is vertical. Thus, `withFullCrossAxisSize` will set `height: 100%`.\n\nIf the direction is `Vertical` then the cross axis is horizontal. Thus, `withFullCrossAxisSize` will set `width: 100%`.\n\n",
                "type": "Ant.Space.Space msg -> Ant.Space.Space msg"
            },
            {
                "name": "withSize",
                "comment": " Alter the sizing between elements. By default the size is `Small`\n\n    space elements\n        |> withSize Large\n\n",
                "type": "Ant.Space.SpaceSize -> Ant.Space.Space msg -> Ant.Space.Space msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Theme",
        "comment": " This module allows you to create custom themes for your components.\n\n@docs Theme\n\n@docs defaultTheme, defaultColors, createMonochromaticColors\n\n",
        "unions": [],
        "aliases": [
            {
                "name": "Theme",
                "comment": " elm-antd theme info used to generate custom themes\n",
                "args": [],
                "type": "{ colors : Ant.Theme.Colors, typography : Ant.Theme.TypographyOptions }"
            }
        ],
        "values": [
            {
                "name": "createMonochromaticColors",
                "comment": " Utility function to create a set of [monochromatic](https://www.w3schools.com/colors/colors_monochromatic.asp) colors based off of a given \"main\" color. This is what is used under the hood in Elm Antd to create the `Colors` record.\n\nThis function only updates the `primary`, `primaryFaded` and `primaryStrong` - leaving the `danger` and `warning` colors untouched.\n\n",
                "type": "Color.Color -> Basics.Float -> Ant.Theme.Colors -> Ant.Theme.Colors"
            },
            {
                "name": "defaultColors",
                "comment": " The default set of colors in the base Elm Antd theme. You can import this record to make your own custom Colors.\n",
                "type": "Ant.Theme.Colors"
            },
            {
                "name": "defaultTheme",
                "comment": " The default antd theme. This record is exposed to allow you to create custom themes without having to create a whole `Theme` record from scratch.\n\n    import Ant.Css exposing (createThemedStyles)\n    import Ant.Theme exposing (defaultTheme)\n\n\n    -- ...\n    view : Html msg\n    view =\n        let\n            myCustomTheme =\n                { defaultTheme\n                    | colors = myCustomColors\n                }\n        in\n        div [ createThemedStyles myCustomTheme ]\n\n",
                "type": "Ant.Theme.Theme"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Tooltip",
        "comment": " Tooltips for your enjoyment!\n\n@docs tooltip, Tooltip, toHtml, withPosition, TooltipPosition\n\n",
        "unions": [
            {
                "name": "Tooltip",
                "comment": " Represents a customizeable tooltip\n",
                "args": [
                    "msg"
                ],
                "cases": []
            },
            {
                "name": "TooltipPosition",
                "comment": " Defines the positioning of the Tooltip\n",
                "args": [],
                "cases": [
                    [
                        "TopLeft",
                        []
                    ],
                    [
                        "Top",
                        []
                    ],
                    [
                        "TopRight",
                        []
                    ],
                    [
                        "RightTop",
                        []
                    ],
                    [
                        "Right",
                        []
                    ],
                    [
                        "RightBottom",
                        []
                    ],
                    [
                        "BottomRight",
                        []
                    ],
                    [
                        "Bottom",
                        []
                    ],
                    [
                        "BottomLeft",
                        []
                    ],
                    [
                        "LeftBottom",
                        []
                    ],
                    [
                        "Left",
                        []
                    ],
                    [
                        "LeftTop",
                        []
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "toHtml",
                "comment": " Convert the Tooltip into a `Html msg`\n",
                "type": "Ant.Tooltip.Tooltip msg -> Html.Html msg"
            },
            {
                "name": "tooltip",
                "comment": " Create a Tooltip\n\n    tooltip \"helpful message\"\n        |> toHtml\n\n",
                "type": "String.String -> Html.Html msg -> Ant.Tooltip.Tooltip msg"
            },
            {
                "name": "withPosition",
                "comment": " Change the default positioning of the tooltip\n\n    tooltip \"on the right\"\n        |> withPosition Right\n        |> toHtml\n\n",
                "type": "Ant.Tooltip.TooltipPosition -> Ant.Tooltip.Tooltip msg -> Ant.Tooltip.Tooltip msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Typography",
        "comment": " Typography components for Elm Antd\n\n@docs title, Level, level, toHtml\n\n",
        "unions": [
            {
                "name": "Level",
                "comment": " Level of your headings\n",
                "args": [],
                "cases": [
                    [
                        "H1",
                        []
                    ],
                    [
                        "H2",
                        []
                    ],
                    [
                        "H3",
                        []
                    ],
                    [
                        "H4",
                        []
                    ],
                    [
                        "H5",
                        []
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "level",
                "comment": " Change the heading level of your `Title` component\n\n    title \"Elm is cool\"\n        |> level H3\n        |> toHtml\n\n",
                "type": "Ant.Typography.Level -> Ant.Typography.Title -> Ant.Typography.Title"
            },
            {
                "name": "title",
                "comment": " Create a `Title` / header component\n\nBy default, the `Title` produced is a `H1`\n\n",
                "type": "String.String -> Ant.Typography.Title"
            },
            {
                "name": "toHtml",
                "comment": " Render your title / header\n",
                "type": "Ant.Typography.Title -> Html.Html msg"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Typography.Paragraph",
        "comment": " Simple spacing between paragraphs\n\n@docs paragraph\n\n",
        "unions": [],
        "aliases": [],
        "values": [
            {
                "name": "paragraph",
                "comment": " Evenly space out a set of children\n",
                "type": "List.List (Html.Html a) -> Html.Html a"
            }
        ],
        "binops": []
    },
    {
        "name": "Ant.Typography.Text",
        "comment": " Create decorated text values\n\n\n## Create a customizeable `Text` component\n\n@docs Text\n\n@docs text\n\n\n## Customize a `Text` component\n\n@docs TextType, LinkTarget, withType, code, keyboard, strong, disabled, underlined, lineThrough, highlighted, toHtml, listToHtml\n\n",
        "unions": [
            {
                "name": "LinkTarget",
                "comment": " Specifies the 'target' html attribute for anchor elements\n\nMore info: <https://www.w3schools.com/tags/att_a_target.asp>\n\n",
                "args": [],
                "cases": [
                    [
                        "Blank",
                        []
                    ],
                    [
                        "Self",
                        []
                    ],
                    [
                        "Parent",
                        []
                    ],
                    [
                        "Top",
                        []
                    ]
                ]
            },
            {
                "name": "Text",
                "comment": " A text value\n",
                "args": [],
                "cases": []
            },
            {
                "name": "TextType",
                "comment": " What kind of text is it?\n",
                "args": [],
                "cases": [
                    [
                        "Primary",
                        []
                    ],
                    [
                        "Link",
                        [
                            "Ant.Typography.Text.Url",
                            "Ant.Typography.Text.LinkTarget"
                        ]
                    ],
                    [
                        "Secondary",
                        []
                    ],
                    [
                        "Warning",
                        []
                    ],
                    [
                        "Danger",
                        []
                    ]
                ]
            }
        ],
        "aliases": [],
        "values": [
            {
                "name": "code",
                "comment": " Turn your Text value into a styled in-line code block\n\n    text \"<h1>I LOVE CATS</h1>\"\n        |> code\n        |> toHtml\n\n",
                "type": "Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            },
            {
                "name": "disabled",
                "comment": " Set your Text element as disabled (the cursor icon changes)\n\n    text \"can't touch this'\"\n        |> disabled True\n        |> toHtml\n\n",
                "type": "Basics.Bool -> Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            },
            {
                "name": "highlighted",
                "comment": " Style the Text as highlighted\n\n    text \"super important\"\n        |> highlighted True\n        |> toHtml\n\n",
                "type": "Basics.Bool -> Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            },
            {
                "name": "keyboard",
                "comment": " Turn your Text value into a styled button-looking block (in-line)\n\n    text \"CMD\"\n        |> keyboard\n        |> toHtml\n\n",
                "type": "Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            },
            {
                "name": "lineThrough",
                "comment": " Set a striked line through your Text element\n\n    text \"forget about this\"\n        |> lineThrough True\n        |> toHtml\n\n",
                "type": "Basics.Bool -> Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            },
            {
                "name": "listToHtml",
                "comment": " Render a list of Text elements into a span\n",
                "type": "List.List Ant.Typography.Text.Text -> Html.Html msg"
            },
            {
                "name": "strong",
                "comment": " Set your Text element as bold\n\n    text \"look at me\"\n        |> strong\n        |> toHtml\n\n",
                "type": "Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            },
            {
                "name": "text",
                "comment": " Create a text value\n\nBy default the text looks just like any regular text. To decorate it, you need to apply one or more of the below options.\n\n    text \"hello, world!\"\n        |> withType Warning\n        |> underlined True\n        |> strong\n        |> toHtml\n\n",
                "type": "String.String -> Ant.Typography.Text.Text"
            },
            {
                "name": "toHtml",
                "comment": " Render your Text node into plain old `Html msg`\n",
                "type": "Ant.Typography.Text.Text -> Html.Html msg"
            },
            {
                "name": "underlined",
                "comment": " Add an underline to your text\n\n    text \"this is important\"\n        |> underlined True\n        |> toHtml\n\n",
                "type": "Basics.Bool -> Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            },
            {
                "name": "withType",
                "comment": " Change the text's type. This allows you to create anchor links as well, see second example.\n\n    text \"Elm\"\n        |> withType Secondary\n        |> toHtml\n\n    text \"forgot password?\"\n        |> withType (Link \"https://myapp.com/forgot-password\" Blank)\n        |> toHtml\n\nThe second argument to `Link` is a [`LinkTarget`](Ant-Typography-Text#LinkTarget).\n\n",
                "type": "Ant.Typography.Text.TextType -> Ant.Typography.Text.Text -> Ant.Typography.Text.Text"
            }
        ],
        "binops": []
    }
]