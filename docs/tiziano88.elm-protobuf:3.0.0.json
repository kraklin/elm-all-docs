[
    {
        "name": "Protobuf",
        "comment": " Runtime library for Google Protocol Buffers.\n\nThis is mostly useless on its own, it is meant to support the code generated by the [Elm Protocol\nBuffer compiler](https://github.com/tiziano88/elm-protobuf).\n\n\n# Decoder Helpers\n\n@docs decode, required, optional, repeated, field\n\n@docs withDefault, intDecoder, fromResult\n\n\n# Encoder Helpers\n\n@docs requiredFieldEncoder, optionalEncoder, repeatedFieldEncoder, numericStringEncoder\n\n\n# Bytes\n\n@docs Bytes, bytesFieldDecoder, bytesFieldEncoder\n\n\n# Well Known Types\n\n@docs Timestamp, timestampDecoder, timestampEncoder\n\n@docs intValueDecoder, intValueEncoder\n\n@docs stringValueDecoder, stringValueEncoder\n\n@docs boolValueDecoder, boolValueEncoder\n\n@docs bytesValueDecoder, bytesValueEncoder\n\n@docs floatValueDecoder, floatValueEncoder\n\n",
        "unions": [],
        "aliases": [
            {
                "name": "Bytes",
                "comment": " Bytes field.\n",
                "args": [],
                "type": "List.List Basics.Int"
            },
            {
                "name": "Timestamp",
                "comment": " Timestamp.\n",
                "args": [],
                "type": "Time.Posix"
            }
        ],
        "values": [
            {
                "name": "boolValueDecoder",
                "comment": " Encodes a BoolValue.\n",
                "type": "Json.Decode.Decoder Basics.Bool"
            },
            {
                "name": "boolValueEncoder",
                "comment": " Encodes a BoolValue.\n",
                "type": "Basics.Bool -> Json.Encode.Value"
            },
            {
                "name": "bytesFieldDecoder",
                "comment": " Decodes a bytes field.\nTODO: Implement.\n",
                "type": "Json.Decode.Decoder Protobuf.Bytes"
            },
            {
                "name": "bytesFieldEncoder",
                "comment": " Encodes a bytes field.\nTODO: Implement.\n",
                "type": "Protobuf.Bytes -> Json.Encode.Value"
            },
            {
                "name": "bytesValueDecoder",
                "comment": " Decodes a BytesValue.\n",
                "type": "Json.Decode.Decoder Protobuf.Bytes"
            },
            {
                "name": "bytesValueEncoder",
                "comment": " Encodes a BytesValue.\n",
                "type": "Protobuf.Bytes -> Json.Encode.Value"
            },
            {
                "name": "decode",
                "comment": " Decodes a message.\n",
                "type": "a -> Json.Decode.Decoder a"
            },
            {
                "name": "field",
                "comment": " Decodes a field.\n",
                "type": "Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b"
            },
            {
                "name": "floatValueDecoder",
                "comment": " Decodes a FloatValue.\n",
                "type": "Json.Decode.Decoder Basics.Float"
            },
            {
                "name": "floatValueEncoder",
                "comment": " Encodes a FloatValue.\n",
                "type": "Basics.Float -> Json.Encode.Value"
            },
            {
                "name": "fromResult",
                "comment": " Turns a Result in to a Decoder\nTaken from <https://github.com/elm-community/json-extra/blob/2.7.0/src/Json/Decode/Extra.elm#L388>\n",
                "type": "Result.Result String.String a -> Json.Decode.Decoder a"
            },
            {
                "name": "intDecoder",
                "comment": " Decodes an Int from either a string or numeric.\n",
                "type": "Json.Decode.Decoder Basics.Int"
            },
            {
                "name": "intValueDecoder",
                "comment": " Decodes an IntValue.\n",
                "type": "Json.Decode.Decoder Basics.Int"
            },
            {
                "name": "intValueEncoder",
                "comment": " Encodes an IntValue.\n",
                "type": "Basics.Int -> Json.Encode.Value"
            },
            {
                "name": "numericStringEncoder",
                "comment": " Encodes an Int as a JSON string, for emitting to int64 proto3 fields\n",
                "type": "Basics.Int -> Json.Encode.Value"
            },
            {
                "name": "optional",
                "comment": " Decodes an optional field.\n",
                "type": "String.String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe.Maybe a -> b) -> Json.Decode.Decoder b"
            },
            {
                "name": "optionalEncoder",
                "comment": " Encodes an optional field.\n",
                "type": "String.String -> (a -> Json.Encode.Value) -> Maybe.Maybe a -> Maybe.Maybe ( String.String, Json.Encode.Value )"
            },
            {
                "name": "repeated",
                "comment": " Decodes a repeated field.\n",
                "type": "String.String -> Json.Decode.Decoder a -> Json.Decode.Decoder (List.List a -> b) -> Json.Decode.Decoder b"
            },
            {
                "name": "repeatedFieldEncoder",
                "comment": " Encodes a repeated field.\n",
                "type": "String.String -> (a -> Json.Encode.Value) -> List.List a -> Maybe.Maybe ( String.String, Json.Encode.Value )"
            },
            {
                "name": "required",
                "comment": " Decodes a required field.\n",
                "type": "String.String -> Json.Decode.Decoder a -> a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b"
            },
            {
                "name": "requiredFieldEncoder",
                "comment": " Encodes a required field.\n",
                "type": "String.String -> (a -> Json.Encode.Value) -> a -> a -> Maybe.Maybe ( String.String, Json.Encode.Value )"
            },
            {
                "name": "stringValueDecoder",
                "comment": " Decodes a StringValue.\n",
                "type": "Json.Decode.Decoder String.String"
            },
            {
                "name": "stringValueEncoder",
                "comment": " Encodes a StringValue.\n",
                "type": "String.String -> Json.Encode.Value"
            },
            {
                "name": "timestampDecoder",
                "comment": " Decodes a Timestamp.\n",
                "type": "Json.Decode.Decoder Protobuf.Timestamp"
            },
            {
                "name": "timestampEncoder",
                "comment": " Encodes a Timestamp.\n",
                "type": "Protobuf.Timestamp -> Json.Encode.Value"
            },
            {
                "name": "withDefault",
                "comment": " Provides a default value for a field.\n",
                "type": "a -> Json.Decode.Decoder a -> Json.Decode.Decoder a"
            }
        ],
        "binops": []
    }
]